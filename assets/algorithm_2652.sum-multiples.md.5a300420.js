import{_ as t,H as e,o as c,c as r,C as s,J as o,E as a,a as n,V as p}from"./chunks/framework.bd00fe0c.js";const U=JSON.parse('{"title":"2652. 倍数求和","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/2652.sum-multiples.md","filePath":"algorithm/2652.sum-multiples.md","lastUpdated":1709958226000}'),y={name:"algorithm/2652.sum-multiples.md"},F=p('<h1 id="_2652-倍数求和" tabindex="-1">2652. 倍数求和 <a class="header-anchor" href="#_2652-倍数求和" aria-label="Permalink to &quot;2652. 倍数求和&quot;">​</a></h1><blockquote><p>难度：<span style="color:#00af9b;font-weight:500;">简单</span></p><p>地址：<a href="https://leetcode.cn/problems/sum-multiples/description/" target="_blank" rel="noreferrer">https://leetcode.cn/problems/sum-multiples/description/</a></p></blockquote><p>给你一个正整数 <code>n</code> ，请你计算在 <code>[1, n]</code> 范围内能被 <code>3</code>、<code>5</code>、<code>7</code> 整除的所有整数之和。</p><p>返回一个整数，用于表示给定范围内所有满足约束条件的数字之和。</p><p><strong>示例 1：</strong></p>',5),D=s("code",null,"[1, 7]",-1),i=s("code",null,"3",-1),u=s("code",null,"5",-1),_=s("code",null,"7",-1),d=s("code",null,"整除的所有整数分别是",-1),B=s("code",null,"3、5、6、7",-1),A=s("code",null,"21",-1),f=s("p",null,[s("strong",null,"示例 2：")],-1),C=s("code",null,"[1, 10]",-1),E=s("code",null,"3",-1),h=s("code",null,"5",-1),m=s("code",null,"7",-1),g=s("code",null,"整除的所有整数分别是",-1),b=s("code",null,"3、5、6、7、9、10",-1),k=s("code",null,"40",-1),T=s("p",null,[s("strong",null,"示例 3：")],-1),v=s("code",null,"[1, 9]",-1),V=s("code",null,"3",-1),S=s("code",null,"5",-1),q=s("code",null,"7",-1),x=s("code",null,"整除的所有整数分别是",-1),N=s("code",null,"3、5、6、7、9",-1),P=s("code",null,"30",-1),M=p(`<p><strong>提示：</strong></p><ul><li><code>1 &lt;= n &lt;= 10^3</code></li></ul><p><strong>题解：</strong></p><p><strong>方法一：枚举</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">number</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">n</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">return</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">number</span><span style="color:#89DDFF;font-style:italic;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> sumOfMultiples </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">sum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">5</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">7</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#BABED8;">sum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">sum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><p><strong>方法二：<a href="https://oi-wiki.org/math/combinatorics/inclusion-exclusion-principle/" target="_blank" rel="noreferrer">容斥原理</a></strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">m</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> ((</span><span style="color:#BABED8;">m</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">m</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">m</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">m</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> sumOfMultiples </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">f</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">f</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">f</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">7</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">-</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">f</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">-</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">f</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">7</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">-</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">f</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">5</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">7</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">f</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">5</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">7</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div>`,7);function j(I,$,w,O,J,R){const l=e("font");return c(),r("div",null,[F,s("blockquote",null,[s("p",null,[s("strong",null,[o(l,{color:"#000"},{default:a(()=>[n("输入")]),_:1})]),n("：n = 7")]),s("p",null,[s("strong",null,[o(l,{color:"#000"},{default:a(()=>[n("输出")]),_:1})]),n("：21")]),s("p",null,[s("strong",null,[o(l,{color:"#000"},{default:a(()=>[n("解释")]),_:1})]),n("：在 "),D,n(" 范围内能被 "),i,n("、"),u,n("、"),_,n(),d,n(),B,n(" 。数字之和为 "),A,n(" 。")])]),f,s("blockquote",null,[s("p",null,[s("strong",null,[o(l,{color:"#000"},{default:a(()=>[n("输入")]),_:1})]),n("：n = 10")]),s("p",null,[s("strong",null,[o(l,{color:"#000"},{default:a(()=>[n("输出")]),_:1})]),n("：40")]),s("p",null,[s("strong",null,[o(l,{color:"#000"},{default:a(()=>[n("解释")]),_:1})]),n("：在 "),C,n(" 范围内能被 "),E,n("、"),h,n("、"),m,n(),g,n(),b,n(" 。数字之和为 "),k,n(" 。")])]),T,s("blockquote",null,[s("p",null,[s("strong",null,[o(l,{color:"#000"},{default:a(()=>[n("输入")]),_:1})]),n("：n = 9")]),s("p",null,[s("strong",null,[o(l,{color:"#000"},{default:a(()=>[n("输出")]),_:1})]),n("：30")]),s("p",null,[s("strong",null,[o(l,{color:"#000"},{default:a(()=>[n("解释")]),_:1})]),n("：在 "),v,n(" 范围内能被 "),V,n("、"),S,n("、"),q,n(),x,n(),N,n(" 。数字之和为 "),P,n(" 。")])]),M])}const z=t(y,[["render",j]]);export{U as __pageData,z as default};
