import{_ as s,o as a,c as n,V as o}from"./chunks/framework.bd00fe0c.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/useful-js-snippets/node.md","filePath":"javascript/useful-js-snippets/node.md","lastUpdated":1689048652000}'),e={name:"javascript/useful-js-snippets/node.md"},l=o('<h2 id="node" tabindex="-1">Node <a class="header-anchor" href="#node" aria-label="Permalink to &quot;Node&quot;">​</a></h2><h3 id="write-json-to-file-将-json-写到文件" tabindex="-1">Write JSON to file (将 JSON 写到文件) <a class="header-anchor" href="#write-json-to-file-将-json-写到文件" aria-label="Permalink to &quot;Write JSON to file (将 JSON 写到文件)&quot;">​</a></h3><p>使用 fs.writeFile()，模板字面量 和 JSON.stringify() 将 json 对象写入到 .json 文件中。</p><p>JavaScript 代码:</p><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> jsonToFile </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">filename</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span></span>\n<span class="line"><span style="color:#BABED8;">  fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeFile</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">`${</span><span style="color:#BABED8;">filename</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.json</span><span style="color:#89DDFF;">`</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#BABED8;">(obj</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// jsonToFile({test: &quot;is passed&quot;}, &#39;testJsonFile&#39;) -&gt; writes the object to &#39;testJsonFile.json&#39;</span></span></code></pre></div>',5),t=[l];function p(r,c,i,D,y,F){return a(),n("div",null,t)}const A=s(e,[["render",p]]);export{d as __pageData,A as default};
