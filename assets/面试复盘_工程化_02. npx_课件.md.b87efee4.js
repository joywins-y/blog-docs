import{_ as s,o as a,c as e,V as n}from"./chunks/framework.bd00fe0c.js";const E=JSON.parse('{"title":"运行本地命令","description":"","frontmatter":{},"headers":[],"relativePath":"面试复盘/工程化/02. npx/课件.md","filePath":"面试复盘/工程化/02. npx/课件.md","lastUpdated":1712573589000}'),p={name:"面试复盘/工程化/02. npx/课件.md"},o=n(`<h1 id="运行本地命令" tabindex="-1">运行本地命令 <a class="header-anchor" href="#运行本地命令" aria-label="Permalink to &quot;运行本地命令&quot;">​</a></h1><p>使用<code>npx 命令</code>时，它会首先从本地工程的<code>node_modules/.bin</code>目录中寻找是否有对应的命令</p><p>例如：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">webpack</span></span></code></pre></div><p>上面这条命令寻找本地工程的<code>node_modules/.bin/webpack</code></p><p>如果将命令配置到<code>package.json</code>的<code>scripts</code>中，可以省略<code>npx</code></p><h1 id="临时下载执行" tabindex="-1">临时下载执行 <a class="header-anchor" href="#临时下载执行" aria-label="Permalink to &quot;临时下载执行&quot;">​</a></h1><p>当执行某个命令时，如果无法从本地工程中找到对应命令，则会把命令对应的包下载到一个临时目录，下载完成后执行，临时目录中的命令会在适当的时候删除</p><p>例如：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">prettyjson</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;">.json</span></span></code></pre></div><p>npx会下载<code>prettyjson</code>包到临时目录，然后运行该命令</p><p>如果命令名称和需要下载的包名不一致时，可以手动指定报名</p><p>例如<code>@vue/cli</code>是包名，<code>vue</code>是命令名，两者不一致，可以使用下面的命令</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@vue/cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">vue</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">create</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">vue-app</span></span></code></pre></div><h1 id="npm-init" tabindex="-1">npm init <a class="header-anchor" href="#npm-init" aria-label="Permalink to &quot;npm init&quot;">​</a></h1><p><code>npm init</code>通常用于初始化工程的<code>package.json</code>文件</p><p>除此之外，有时也可以充当<code>npx</code>的作用</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">包名</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 等效于 npx create-包名</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@命名空间</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 等效于 npx @命名空间/create</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@命名空间/包名</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 等效于 npx @命名空间/create-包名</span></span></code></pre></div>`,18),l=[o];function t(c,r,i,d,y,B){return a(),e("div",null,l)}const D=s(p,[["render",t]]);export{E as __pageData,D as default};
