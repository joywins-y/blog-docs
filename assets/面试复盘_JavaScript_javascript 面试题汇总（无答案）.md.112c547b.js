import{_ as s,o as a,c as n,V as l}from"./chunks/framework.bd00fe0c.js";const h=JSON.parse('{"title":"JavaScript 面试题汇总","description":"","frontmatter":{},"headers":[],"relativePath":"面试复盘/JavaScript/javascript 面试题汇总（无答案）.md","filePath":"面试复盘/JavaScript/javascript 面试题汇总（无答案）.md","lastUpdated":1712573589000}'),o={name:"面试复盘/JavaScript/javascript 面试题汇总（无答案）.md"},e=l(`<h1 id="javascript-面试题汇总" tabindex="-1"><em>JavaScript</em> 面试题汇总 <a class="header-anchor" href="#javascript-面试题汇总" aria-label="Permalink to &quot;_JavaScript_ 面试题汇总&quot;">​</a></h1><h3 id="_1-根据下面-es6-构造函数的书写方式-要求写出-es5-的" tabindex="-1">1. 根据下面 <em>ES6</em> 构造函数的书写方式，要求写出 <em>ES5</em> 的 <a class="header-anchor" href="#_1-根据下面-es6-构造函数的书写方式-要求写出-es5-的" aria-label="Permalink to &quot;1. 根据下面 _ES6_ 构造函数的书写方式，要求写出 _ES5_ 的&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Example</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">name</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">init</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">fun</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">name</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">fun</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> e </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Example</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">init</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_2-数组去重有哪些方法-美团-19-年" tabindex="-1">2. 数组去重有哪些方法？（美团 <em>19</em> 年） <a class="header-anchor" href="#_2-数组去重有哪些方法-美团-19-年" aria-label="Permalink to &quot;2. 数组去重有哪些方法？（美团 _19_ 年）&quot;">​</a></h3><h3 id="_3-描述下列代码的执行结果" tabindex="-1">3. 描述下列代码的执行结果 <a class="header-anchor" href="#_3-描述下列代码的执行结果" aria-label="Permalink to &quot;3. 描述下列代码的执行结果&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">foo</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#BABED8;"> a)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">p</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">p</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">b</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">b</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_4-描述下列代码的执行结果" tabindex="-1">4. 描述下列代码的执行结果 <a class="header-anchor" href="#_4-描述下列代码的执行结果" aria-label="Permalink to &quot;4. 描述下列代码的执行结果&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Foo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">arr</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">arr</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">bar</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">n</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Foo</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bar</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bar</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(f</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">arr)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_5-描述下列代码的执行结果" tabindex="-1">5. 描述下列代码的执行结果 <a class="header-anchor" href="#_5-描述下列代码的执行结果" aria-label="Permalink to &quot;5. 描述下列代码的执行结果&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">f</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">count</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">count</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">    </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">count</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">f</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">f</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">f</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_6-描述下列代码的执行结果" tabindex="-1">6. 描述下列代码的执行结果 <a class="header-anchor" href="#_6-描述下列代码的执行结果" aria-label="Permalink to &quot;6. 描述下列代码的执行结果&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(a </span><span style="color:#89DDFF;">===</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">||</span><span style="color:#BABED8;"> (</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#BABED8;"> b </span><span style="color:#89DDFF;">===</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">||</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_7-描述下列代码的执行结果" tabindex="-1">7. 描述下列代码的执行结果 <a class="header-anchor" href="#_7-描述下列代码的执行结果" aria-label="Permalink to &quot;7. 描述下列代码的执行结果&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ButtonWrapper</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">domBtnEl</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">hash</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">domBtnEl</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">domBtnEl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">hash</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">hash</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">bindEvent</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">bindEvent</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">domBtnEl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">click</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">clickEvent</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">detachEvent</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">domBtnEl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeEventListener</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">click</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">clickEvent</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">clickEvent</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">The hash of the button is: </span><span style="color:#89DDFF;">\${</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">hash</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_8-箭头函数有哪些特点" tabindex="-1">8. 箭头函数有哪些特点 <a class="header-anchor" href="#_8-箭头函数有哪些特点" aria-label="Permalink to &quot;8. 箭头函数有哪些特点&quot;">​</a></h3><h3 id="_9-说一说类的继承" tabindex="-1">9. 说一说类的继承 <a class="header-anchor" href="#_9-说一说类的继承" aria-label="Permalink to &quot;9. 说一说类的继承&quot;">​</a></h3><h3 id="_10-new-操作符都做了哪些事" tabindex="-1">10. <em>new</em> 操作符都做了哪些事？ <a class="header-anchor" href="#_10-new-操作符都做了哪些事" aria-label="Permalink to &quot;10. _new_ 操作符都做了哪些事？&quot;">​</a></h3><h3 id="_11-call、apply、bind-的区别" tabindex="-1">11. <em>call、apply、bind</em> 的区别 ？ <a class="header-anchor" href="#_11-call、apply、bind-的区别" aria-label="Permalink to &quot;11. _call、apply、bind_ 的区别 ？&quot;">​</a></h3><h3 id="_12-事件循环机制-宏任务、微任务" tabindex="-1">12. 事件循环机制（宏任务、微任务） <a class="header-anchor" href="#_12-事件循环机制-宏任务、微任务" aria-label="Permalink to &quot;12. 事件循环机制（宏任务、微任务）&quot;">​</a></h3><h3 id="_13-你了解-node-中的事件循环机制吗-node11-版本以后有什么改变" tabindex="-1">13. 你了解 <em>node</em> 中的事件循环机制吗？<em>node11</em> 版本以后有什么改变 <a class="header-anchor" href="#_13-你了解-node-中的事件循环机制吗-node11-版本以后有什么改变" aria-label="Permalink to &quot;13. 你了解 _node_ 中的事件循环机制吗？_node11_ 版本以后有什么改变&quot;">​</a></h3><h3 id="_14-什么是函数柯里化" tabindex="-1">14. 什么是函数柯里化？ <a class="header-anchor" href="#_14-什么是函数柯里化" aria-label="Permalink to &quot;14. 什么是函数柯里化？&quot;">​</a></h3><h3 id="_15-promise-all-方法的使用场景-数组中必须每一项都是-promise-对象吗-不是-promise-对象会如何处理" tabindex="-1">15. <em>promise.all</em> 方法的使用场景？数组中必须每一项都是 <em>promise</em> 对象吗？不是 <em>promise</em> 对象会如何处理 ？ <a class="header-anchor" href="#_15-promise-all-方法的使用场景-数组中必须每一项都是-promise-对象吗-不是-promise-对象会如何处理" aria-label="Permalink to &quot;15. _promise.all_ 方法的使用场景？数组中必须每一项都是 _promise_ 对象吗？不是 _promise_ 对象会如何处理 ？&quot;">​</a></h3><h3 id="_16-this-的指向哪几种" tabindex="-1">16. <em>this</em> 的指向哪几种 ？ <a class="header-anchor" href="#_16-this-的指向哪几种" aria-label="Permalink to &quot;16. _this_ 的指向哪几种 ？&quot;">​</a></h3><h3 id="_17-js-中继承实现的几种方式" tabindex="-1">17. <em>JS</em> 中继承实现的几种方式 <a class="header-anchor" href="#_17-js-中继承实现的几种方式" aria-label="Permalink to &quot;17. _JS_ 中继承实现的几种方式&quot;">​</a></h3><h3 id="_18-什么是事件监听" tabindex="-1">18. 什么是事件监听 <a class="header-anchor" href="#_18-什么是事件监听" aria-label="Permalink to &quot;18. 什么是事件监听&quot;">​</a></h3><h3 id="_19-什么是-js-的闭包-有什么作用" tabindex="-1">19. 什么是 <em>js</em> 的闭包？有什么作用？ <a class="header-anchor" href="#_19-什么是-js-的闭包-有什么作用" aria-label="Permalink to &quot;19. 什么是 _js_ 的闭包？有什么作用？&quot;">​</a></h3><h3 id="_20-事件委托以及冒泡原理" tabindex="-1">20. 事件委托以及冒泡原理 <a class="header-anchor" href="#_20-事件委托以及冒泡原理" aria-label="Permalink to &quot;20. 事件委托以及冒泡原理&quot;">​</a></h3><h3 id="_21-let-const-var-的区别-什么是块级作用域-如何用" tabindex="-1">21. <em>let const var</em> 的区别？什么是块级作用域？如何用？ <a class="header-anchor" href="#_21-let-const-var-的区别-什么是块级作用域-如何用" aria-label="Permalink to &quot;21. _let const var_ 的区别？什么是块级作用域？如何用？&quot;">​</a></h3><h3 id="_22-es5-的方法实现块级作用域-立即执行函数-es6-呢" tabindex="-1">22. <em>ES5</em> 的方法实现块级作用域（立即执行函数） <em>ES6</em> 呢？ <a class="header-anchor" href="#_22-es5-的方法实现块级作用域-立即执行函数-es6-呢" aria-label="Permalink to &quot;22. _ES5_ 的方法实现块级作用域（立即执行函数） _ES6_ 呢？&quot;">​</a></h3><h3 id="_23-es6-箭头函数的特性" tabindex="-1">23. <em>ES6</em> 箭头函数的特性 <a class="header-anchor" href="#_23-es6-箭头函数的特性" aria-label="Permalink to &quot;23. _ES6_ 箭头函数的特性&quot;">​</a></h3><h3 id="_24-箭头函数与普通函数的区别" tabindex="-1">24. 箭头函数与普通函数的区别 ？ <a class="header-anchor" href="#_24-箭头函数与普通函数的区别" aria-label="Permalink to &quot;24. 箭头函数与普通函数的区别 ？&quot;">​</a></h3><h3 id="_25-js-的基本数据类型有哪些-基本数据类型和引用数据类型的区别" tabindex="-1">25. <em>JS</em> 的基本数据类型有哪些？基本数据类型和引用数据类型的区别 <a class="header-anchor" href="#_25-js-的基本数据类型有哪些-基本数据类型和引用数据类型的区别" aria-label="Permalink to &quot;25. _JS_ 的基本数据类型有哪些？基本数据类型和引用数据类型的区别&quot;">​</a></h3><h3 id="_26-nan-是什么的缩写" tabindex="-1">26. <em>NaN</em> 是什么的缩写 <a class="header-anchor" href="#_26-nan-是什么的缩写" aria-label="Permalink to &quot;26. _NaN_ 是什么的缩写&quot;">​</a></h3><h3 id="_27-js-的作用域类型" tabindex="-1">27. <em>JS</em> 的作用域类型 <a class="header-anchor" href="#_27-js-的作用域类型" aria-label="Permalink to &quot;27. _JS_ 的作用域类型&quot;">​</a></h3><h3 id="_28-undefined-null-返回的结果是什么-undefined-与-null-的区别在哪" tabindex="-1">28. <em>undefined==null</em> 返回的结果是什么？<em>undefined</em> 与 <em>null</em> 的区别在哪？ <a class="header-anchor" href="#_28-undefined-null-返回的结果是什么-undefined-与-null-的区别在哪" aria-label="Permalink to &quot;28. _undefined==null_ 返回的结果是什么？_undefined_ 与 _null_ 的区别在哪？&quot;">​</a></h3><h3 id="_29-写一个函数判断变量类型" tabindex="-1">29. 写一个函数判断变量类型 <a class="header-anchor" href="#_29-写一个函数判断变量类型" aria-label="Permalink to &quot;29. 写一个函数判断变量类型&quot;">​</a></h3><h3 id="_30-js-的异步处理函数" tabindex="-1">30. <em>js</em> 的异步处理函数 <a class="header-anchor" href="#_30-js-的异步处理函数" aria-label="Permalink to &quot;30. _js_ 的异步处理函数&quot;">​</a></h3><h3 id="_31-defer-与-async-的区别" tabindex="-1">31. <em>defer</em> 与 <em>async</em> 的区别 <a class="header-anchor" href="#_31-defer-与-async-的区别" aria-label="Permalink to &quot;31. _defer_ 与 _async_ 的区别&quot;">​</a></h3><h3 id="_32-浏览器事件循环和任务队列" tabindex="-1">32. 浏览器事件循环和任务队列 <a class="header-anchor" href="#_32-浏览器事件循环和任务队列" aria-label="Permalink to &quot;32. 浏览器事件循环和任务队列&quot;">​</a></h3><h3 id="_33-原型与原型链-美团-19-年" tabindex="-1">33. 原型与原型链 （美团 19 年） <a class="header-anchor" href="#_33-原型与原型链-美团-19-年" aria-label="Permalink to &quot;33. 原型与原型链 （美团 19 年）&quot;">​</a></h3><h3 id="_34-作用域与作用域链-美团-19-年" tabindex="-1">34. 作用域与作用域链 （美团 19 年） <a class="header-anchor" href="#_34-作用域与作用域链-美团-19-年" aria-label="Permalink to &quot;34. 作用域与作用域链 （美团 19 年）&quot;">​</a></h3><h3 id="_35-闭包及应用场景以及闭包缺点-美团-19-年" tabindex="-1">35. 闭包及应用场景以及闭包缺点 （美团 19 年） <a class="header-anchor" href="#_35-闭包及应用场景以及闭包缺点-美团-19-年" aria-label="Permalink to &quot;35. 闭包及应用场景以及闭包缺点 （美团 19 年）&quot;">​</a></h3><h3 id="_36-继承方式-美团-19-年" tabindex="-1">36. 继承方式 （美团 19 年） <a class="header-anchor" href="#_36-继承方式-美团-19-年" aria-label="Permalink to &quot;36. 继承方式 （美团 19 年）&quot;">​</a></h3><h3 id="_37-原始值与引用值-美团-19-年" tabindex="-1">37. 原始值与引用值 （美团 19 年） <a class="header-anchor" href="#_37-原始值与引用值-美团-19-年" aria-label="Permalink to &quot;37. 原始值与引用值 （美团 19 年）&quot;">​</a></h3><h3 id="_38-描述下列代码的执行结果" tabindex="-1">38. 描述下列代码的执行结果 <a class="header-anchor" href="#_38-描述下列代码的执行结果" aria-label="Permalink to &quot;38. 描述下列代码的执行结果&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> first </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">reject</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">p</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">reject</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">7</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">4</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">p</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">arg</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">arg</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 1 bb</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">6</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">first</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">arg</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">arg</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">7</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 2 aa</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">8</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">setTimeout</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">9</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">10</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_39-如何判断数组或对象-美团-19-年" tabindex="-1">39. 如何判断数组或对象（美团 19 年） <a class="header-anchor" href="#_39-如何判断数组或对象-美团-19-年" aria-label="Permalink to &quot;39. 如何判断数组或对象（美团 19 年）&quot;">​</a></h3><h3 id="_40-对象深拷贝与浅拷贝-单独问了-object-assign-美团-19-年" tabindex="-1">40. 对象深拷贝与浅拷贝，单独问了 <em>Object.assign</em>（美团 19 年） <a class="header-anchor" href="#_40-对象深拷贝与浅拷贝-单独问了-object-assign-美团-19-年" aria-label="Permalink to &quot;40. 对象深拷贝与浅拷贝，单独问了 _Object.assign_（美团 19 年）&quot;">​</a></h3><h3 id="_42-说说-instanceof-原理-并回答下面的题目-美团-19-年" tabindex="-1">42. 说说 <em>instanceof</em> 原理，并回答下面的题目（美团 19 年） <a class="header-anchor" href="#_42-说说-instanceof-原理-并回答下面的题目-美团-19-年" aria-label="Permalink to &quot;42. 说说 _instanceof_ 原理，并回答下面的题目（美团 19 年）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">A</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">B</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#FFCB6B;">A</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">B</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">A</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(a </span><span style="color:#89DDFF;">instanceof</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">B</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// true of false ?</span></span></code></pre></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h3><h3 id="_43-内存泄漏-美团-19-年" tabindex="-1">43. 内存泄漏（美团 19 年） <a class="header-anchor" href="#_43-内存泄漏-美团-19-年" aria-label="Permalink to &quot;43. 内存泄漏（美团 19 年）&quot;">​</a></h3><h3 id="_44-es6-新增哪些东西-让你自己说-美团-19-年" tabindex="-1">44. <em>ES6</em> 新增哪些东西？让你自己说（美团 19 年） <a class="header-anchor" href="#_44-es6-新增哪些东西-让你自己说-美团-19-年" aria-label="Permalink to &quot;44. _ES6_ 新增哪些东西？让你自己说（美团 19 年）&quot;">​</a></h3><h3 id="_45-weakmap、weakset-美团-19-年" tabindex="-1">45. <em>weakmap、weakset</em>（美团 <em>19</em> 年） <a class="header-anchor" href="#_45-weakmap、weakset-美团-19-年" aria-label="Permalink to &quot;45. _weakmap、weakset_（美团 _19_ 年）&quot;">​</a></h3><h3 id="_46-为什么-es6-会新增-promise-美团-19-年" tabindex="-1">46. 为什么 <em>ES6</em> 会新增 <em>Promise</em>（美团 19 年） <a class="header-anchor" href="#_46-为什么-es6-会新增-promise-美团-19-年" aria-label="Permalink to &quot;46. 为什么 _ES6_ 会新增 _Promise_（美团 19 年）&quot;">​</a></h3><h3 id="_47-es5-实现继承-虾皮" tabindex="-1">47. <em>ES5</em> 实现继承？（虾皮） <a class="header-anchor" href="#_47-es5-实现继承-虾皮" aria-label="Permalink to &quot;47. _ES5_ 实现继承？（虾皮）&quot;">​</a></h3><h3 id="_48-科里化-搜狗" tabindex="-1">48. 科里化？（搜狗） <a class="header-anchor" href="#_48-科里化-搜狗" aria-label="Permalink to &quot;48. 科里化？（搜狗）&quot;">​</a></h3><h3 id="_49-防抖和节流-虾皮" tabindex="-1">49. 防抖和节流？（虾皮） <a class="header-anchor" href="#_49-防抖和节流-虾皮" aria-label="Permalink to &quot;49. 防抖和节流？（虾皮）&quot;">​</a></h3><h3 id="_50-闭包-好未来-探讨了-40-分钟" tabindex="-1">50. 闭包？（好未来---探讨了 <em>40</em> 分钟） <a class="header-anchor" href="#_50-闭包-好未来-探讨了-40-分钟" aria-label="Permalink to &quot;50. 闭包？（好未来---探讨了 _40_ 分钟）&quot;">​</a></h3><h3 id="_51-原型和原型链-字节" tabindex="-1">51. 原型和原型链？（字节） <a class="header-anchor" href="#_51-原型和原型链-字节" aria-label="Permalink to &quot;51. 原型和原型链？（字节）&quot;">​</a></h3><h3 id="_52-排序算法-时间复杂度、空间复杂度" tabindex="-1">52. 排序算法---（时间复杂度、空间复杂度） <a class="header-anchor" href="#_52-排序算法-时间复杂度、空间复杂度" aria-label="Permalink to &quot;52. 排序算法---（时间复杂度、空间复杂度）&quot;">​</a></h3><h3 id="_53-浏览器事件循环和-node-事件循环-搜狗" tabindex="-1">53. 浏览器事件循环和 <em>node</em> 事件循环（搜狗） <a class="header-anchor" href="#_53-浏览器事件循环和-node-事件循环-搜狗" aria-label="Permalink to &quot;53. 浏览器事件循环和 _node_ 事件循环（搜狗）&quot;">​</a></h3><h3 id="_54-闭包的好处" tabindex="-1">54. 闭包的好处 <a class="header-anchor" href="#_54-闭包的好处" aria-label="Permalink to &quot;54. 闭包的好处&quot;">​</a></h3><h3 id="_55-let、const、var-的区别" tabindex="-1">55. <em>let、const、var</em> 的区别 <a class="header-anchor" href="#_55-let、const、var-的区别" aria-label="Permalink to &quot;55. _let、const、var_ 的区别&quot;">​</a></h3><h3 id="_56-闭包、作用域-可以扩充到作用域链" tabindex="-1">56. 闭包、作用域（可以扩充到作用域链） <a class="header-anchor" href="#_56-闭包、作用域-可以扩充到作用域链" aria-label="Permalink to &quot;56. 闭包、作用域（可以扩充到作用域链）&quot;">​</a></h3><h3 id="_57-promise" tabindex="-1">57. <em>Promise</em> <a class="header-anchor" href="#_57-promise" aria-label="Permalink to &quot;57. _Promise_&quot;">​</a></h3><h3 id="_58-实现一个函数-对一个-url-进行请求-失败就再次请求-超过最大次数就走失败回调-任何一次成功都走成功回调" tabindex="-1">58. 实现一个函数,对一个 url 进行请求,失败就再次请求,超过最大次数就走失败回调,任何一次成功都走成功回调 <a class="header-anchor" href="#_58-实现一个函数-对一个-url-进行请求-失败就再次请求-超过最大次数就走失败回调-任何一次成功都走成功回调" aria-label="Permalink to &quot;58. 实现一个函数,对一个 url 进行请求,失败就再次请求,超过最大次数就走失败回调,任何一次成功都走成功回调&quot;">​</a></h3><h3 id="_59-冒泡排序" tabindex="-1">59. 冒泡排序 <a class="header-anchor" href="#_59-冒泡排序" aria-label="Permalink to &quot;59. 冒泡排序&quot;">​</a></h3><h3 id="_60-数组降维" tabindex="-1">60. 数组降维 <a class="header-anchor" href="#_60-数组降维" aria-label="Permalink to &quot;60. 数组降维&quot;">​</a></h3><h3 id="_61-call-apply-bind" tabindex="-1">61. <em>call apply bind</em> <a class="header-anchor" href="#_61-call-apply-bind" aria-label="Permalink to &quot;61. _call apply bind_&quot;">​</a></h3><h3 id="_62-promise-代码题" tabindex="-1">62. promise 代码题 <a class="header-anchor" href="#_62-promise-代码题" aria-label="Permalink to &quot;62. promise 代码题&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">reject</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">reject</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">4</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">reject1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">reject</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">reject2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#BABED8;"> (err) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_63-proxy-是实现代理-可以改变-js-底层的实现方式-然后说了一下和-object-defineproperty-的区别" tabindex="-1">63. <em>proxy</em> 是实现代理，可以改变 <em>js</em> 底层的实现方式, 然后说了一下和 <em>Object.defineProperty</em> 的区别 <a class="header-anchor" href="#_63-proxy-是实现代理-可以改变-js-底层的实现方式-然后说了一下和-object-defineproperty-的区别" aria-label="Permalink to &quot;63. _proxy_ 是实现代理，可以改变 _js_ 底层的实现方式, 然后说了一下和 _Object.defineProperty_ 的区别&quot;">​</a></h3><h3 id="_64-使用-es5-与-es6-分别实现继承" tabindex="-1">64. 使用 <em>ES5</em> 与 <em>ES6</em> 分别实现继承 <a class="header-anchor" href="#_64-使用-es5-与-es6-分别实现继承" aria-label="Permalink to &quot;64. 使用 _ES5_ 与 _ES6_ 分别实现继承&quot;">​</a></h3><h3 id="_65-深拷贝" tabindex="-1">65. 深拷贝 <a class="header-anchor" href="#_65-深拷贝" aria-label="Permalink to &quot;65. 深拷贝&quot;">​</a></h3><h3 id="_66-async-与-await-的作用" tabindex="-1">66. <em>async</em> 与 <em>await</em> 的作用 <a class="header-anchor" href="#_66-async-与-await-的作用" aria-label="Permalink to &quot;66. _async_ 与 _await_ 的作用&quot;">​</a></h3><h3 id="_67-数据的基础类型-原始类型-有哪些" tabindex="-1">67. 数据的基础类型（原始类型）有哪些 <a class="header-anchor" href="#_67-数据的基础类型-原始类型-有哪些" aria-label="Permalink to &quot;67. 数据的基础类型（原始类型）有哪些&quot;">​</a></h3><h3 id="_68-typeof-null-返回结果" tabindex="-1">68. <em>typeof null</em> 返回结果 <a class="header-anchor" href="#_68-typeof-null-返回结果" aria-label="Permalink to &quot;68. _typeof null_ 返回结果&quot;">​</a></h3><h3 id="_69-对变量进行类型判断的方式有哪些" tabindex="-1">69. 对变量进行类型判断的方式有哪些 <a class="header-anchor" href="#_69-对变量进行类型判断的方式有哪些" aria-label="Permalink to &quot;69. 对变量进行类型判断的方式有哪些&quot;">​</a></h3><h3 id="_70-typeof-与-instanceof-的区别-instanceof-是如何实现" tabindex="-1">70. <em>typeof</em> 与 <em>instanceof</em> 的区别？ <em>instanceof</em> 是如何实现？ <a class="header-anchor" href="#_70-typeof-与-instanceof-的区别-instanceof-是如何实现" aria-label="Permalink to &quot;70. _typeof_ 与 _instanceof_ 的区别？ _instanceof_ 是如何实现？&quot;">​</a></h3><h3 id="_71-引用类型有哪些-有什么特点" tabindex="-1">71. 引用类型有哪些，有什么特点 <a class="header-anchor" href="#_71-引用类型有哪些-有什么特点" aria-label="Permalink to &quot;71. 引用类型有哪些，有什么特点&quot;">​</a></h3><h3 id="_72-如何得到一个变量的类型-指函数封装实现" tabindex="-1">72. 如何得到一个变量的类型---指函数封装实现 <a class="header-anchor" href="#_72-如何得到一个变量的类型-指函数封装实现" aria-label="Permalink to &quot;72. 如何得到一个变量的类型---指函数封装实现&quot;">​</a></h3><h3 id="_73-什么是作用域、闭包" tabindex="-1">73. 什么是作用域、闭包 <a class="header-anchor" href="#_73-什么是作用域、闭包" aria-label="Permalink to &quot;73. 什么是作用域、闭包&quot;">​</a></h3><h3 id="_74-闭包的缺点是什么-闭包的应用场景有哪些-怎么销毁闭包" tabindex="-1">74. 闭包的缺点是什么？闭包的应用场景有哪些？怎么销毁闭包？ <a class="header-anchor" href="#_74-闭包的缺点是什么-闭包的应用场景有哪些-怎么销毁闭包" aria-label="Permalink to &quot;74. 闭包的缺点是什么？闭包的应用场景有哪些？怎么销毁闭包？&quot;">​</a></h3><h3 id="_75-js的垃圾回收站机制" tabindex="-1">75. <em>JS</em>的垃圾回收站机制 <a class="header-anchor" href="#_75-js的垃圾回收站机制" aria-label="Permalink to &quot;75. *JS*的垃圾回收站机制&quot;">​</a></h3><h3 id="_76-什么是作用域链、原型链" tabindex="-1">76. 什么是作用域链、原型链 <a class="header-anchor" href="#_76-什么是作用域链、原型链" aria-label="Permalink to &quot;76. 什么是作用域链、原型链&quot;">​</a></h3><h3 id="_77-new-一个构造函数发生了什么" tabindex="-1">77. <em>new</em> 一个构造函数发生了什么 <a class="header-anchor" href="#_77-new-一个构造函数发生了什么" aria-label="Permalink to &quot;77. _new_ 一个构造函数发生了什么&quot;">​</a></h3><h3 id="_78-对一个构造函数实例化后-它的原型链指向什么" tabindex="-1">78. 对一个构造函数实例化后. 它的原型链指向什么 <a class="header-anchor" href="#_78-对一个构造函数实例化后-它的原型链指向什么" aria-label="Permalink to &quot;78. 对一个构造函数实例化后. 它的原型链指向什么&quot;">​</a></h3><h3 id="_79-什么是变量提升" tabindex="-1">79. 什么是变量提升 <a class="header-anchor" href="#_79-什么是变量提升" aria-label="Permalink to &quot;79. 什么是变量提升&quot;">​</a></h3><h3 id="_80-和-的区别是什么" tabindex="-1">80. == 和 === 的区别是什么 <a class="header-anchor" href="#_80-和-的区别是什么" aria-label="Permalink to &quot;80. == 和 === 的区别是什么&quot;">​</a></h3><h3 id="_81-object-is-方法比较的是什么" tabindex="-1">81. <em>Object.is</em> 方法比较的是什么 <a class="header-anchor" href="#_81-object-is-方法比较的是什么" aria-label="Permalink to &quot;81. _Object.is_ 方法比较的是什么&quot;">​</a></h3><h3 id="_82-基础数据类型和引用数据类型-哪个是保存在栈内存中-哪个是在堆内存中" tabindex="-1">82. 基础数据类型和引用数据类型，哪个是保存在栈内存中？哪个是在堆内存中？ <a class="header-anchor" href="#_82-基础数据类型和引用数据类型-哪个是保存在栈内存中-哪个是在堆内存中" aria-label="Permalink to &quot;82. 基础数据类型和引用数据类型，哪个是保存在栈内存中？哪个是在堆内存中？&quot;">​</a></h3><h3 id="_83-箭头函数解决了什么问题" tabindex="-1">83. 箭头函数解决了什么问题？ <a class="header-anchor" href="#_83-箭头函数解决了什么问题" aria-label="Permalink to &quot;83. 箭头函数解决了什么问题？&quot;">​</a></h3><h3 id="_84-new-一个箭头函数后-它的-this-指向什么" tabindex="-1">84. <em>new</em> 一个箭头函数后，它的 <em>this</em> 指向什么？ <a class="header-anchor" href="#_84-new-一个箭头函数后-它的-this-指向什么" aria-label="Permalink to &quot;84. _new_ 一个箭头函数后，它的 _this_ 指向什么？&quot;">​</a></h3><h3 id="_85-promise-的其他方法有用过吗-如-all、race。请说下这两者的区别" tabindex="-1">85. <em>promise</em> 的其他方法有用过吗？如 <em>all、race</em>。请说下这两者的区别 <a class="header-anchor" href="#_85-promise-的其他方法有用过吗-如-all、race。请说下这两者的区别" aria-label="Permalink to &quot;85. _promise_ 的其他方法有用过吗？如 _all、race_。请说下这两者的区别&quot;">​</a></h3><h3 id="_86-class-是如何实现的" tabindex="-1">86. <em>class</em> 是如何实现的 <a class="header-anchor" href="#_86-class-是如何实现的" aria-label="Permalink to &quot;86. _class_ 是如何实现的&quot;">​</a></h3><h3 id="_87-let、const、var-的区别" tabindex="-1">87. <em>let、const、var</em> 的区别 <a class="header-anchor" href="#_87-let、const、var-的区别" aria-label="Permalink to &quot;87. _let、const、var_ 的区别&quot;">​</a></h3><h3 id="_88-es6-中模块化导入和导出与-common-js-有什么区别" tabindex="-1">88. <em>ES6</em> 中模块化导入和导出与 <em>common.js</em> 有什么区别 <a class="header-anchor" href="#_88-es6-中模块化导入和导出与-common-js-有什么区别" aria-label="Permalink to &quot;88. _ES6_ 中模块化导入和导出与 _common.js_ 有什么区别&quot;">​</a></h3><h3 id="_89-说一下普通函数和箭头函数的区别" tabindex="-1">89. 说一下普通函数和箭头函数的区别 <a class="header-anchor" href="#_89-说一下普通函数和箭头函数的区别" aria-label="Permalink to &quot;89. 说一下普通函数和箭头函数的区别&quot;">​</a></h3><h3 id="_90-说一下-promise-和-async-和-await-什么关系" tabindex="-1">90. 说一下 <em>promise</em> 和 <em>async</em> 和 <em>await</em> 什么关系 <a class="header-anchor" href="#_90-说一下-promise-和-async-和-await-什么关系" aria-label="Permalink to &quot;90. 说一下 _promise_ 和 _async_ 和 _await_ 什么关系&quot;">​</a></h3><h3 id="_91-说一下你学习过的有关-es6-的知识点" tabindex="-1">91. 说一下你学习过的有关 <em>ES6</em> 的知识点 <a class="header-anchor" href="#_91-说一下你学习过的有关-es6-的知识点" aria-label="Permalink to &quot;91. 说一下你学习过的有关 _ES6_ 的知识点&quot;">​</a></h3><h3 id="_92-了解过-js-中-arguments-吗-接收的是实参还是形参" tabindex="-1">92. 了解过 <em>js</em> 中 <em>arguments</em> 吗？接收的是实参还是形参？ <a class="header-anchor" href="#_92-了解过-js-中-arguments-吗-接收的是实参还是形参" aria-label="Permalink to &quot;92. 了解过 _js_ 中 _arguments_ 吗？接收的是实参还是形参？&quot;">​</a></h3><h3 id="_93-es6-相比于-es5-有什么变化" tabindex="-1">93. <em>ES6</em> 相比于 <em>ES5</em> 有什么变化 <a class="header-anchor" href="#_93-es6-相比于-es5-有什么变化" aria-label="Permalink to &quot;93. _ES6_ 相比于 _ES5_ 有什么变化&quot;">​</a></h3><h3 id="_94-强制类型转换方法有哪些" tabindex="-1">94. 强制类型转换方法有哪些？ <a class="header-anchor" href="#_94-强制类型转换方法有哪些" aria-label="Permalink to &quot;94. 强制类型转换方法有哪些？&quot;">​</a></h3><h3 id="_95-纯函数" tabindex="-1">95. 纯函数 <a class="header-anchor" href="#_95-纯函数" aria-label="Permalink to &quot;95. 纯函数&quot;">​</a></h3><h3 id="_96-js-模块化" tabindex="-1">96. <em>JS</em> 模块化 <a class="header-anchor" href="#_96-js-模块化" aria-label="Permalink to &quot;96. _JS_ 模块化&quot;">​</a></h3><h3 id="_97-看过-jquery-源码吗" tabindex="-1">97. 看过 <em>jquery</em> 源码吗？ <a class="header-anchor" href="#_97-看过-jquery-源码吗" aria-label="Permalink to &quot;97. 看过 _jquery_ 源码吗？&quot;">​</a></h3><h3 id="_98-说一下-js-中的-this" tabindex="-1">98. 说一下 <em>js</em> 中的 <em>this</em> <a class="header-anchor" href="#_98-说一下-js-中的-this" aria-label="Permalink to &quot;98. 说一下 _js_ 中的 _this_&quot;">​</a></h3><h3 id="_99-apply-call-bind-区别-手写" tabindex="-1">99. <em>apply call bind</em> 区别，手写 <a class="header-anchor" href="#_99-apply-call-bind-区别-手写" aria-label="Permalink to &quot;99. _apply call bind_ 区别，手写&quot;">​</a></h3><h3 id="_100-手写-reduce-flat" tabindex="-1">100. 手写 <em>reduce flat</em> <a class="header-anchor" href="#_100-手写-reduce-flat" aria-label="Permalink to &quot;100. 手写 _reduce flat_&quot;">​</a></h3><h3 id="_101-隐试转换的原理-是怎么转换的" tabindex="-1">101. == 隐试转换的原理？是怎么转换的 <a class="header-anchor" href="#_101-隐试转换的原理-是怎么转换的" aria-label="Permalink to &quot;101. == 隐试转换的原理？是怎么转换的&quot;">​</a></h3><h3 id="_102-1-2-3-map-parseint-结果是什么-为什么-字节" tabindex="-1">102. [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;].map(parseInt) 结果是什么，为什么 （字节） <a class="header-anchor" href="#_102-1-2-3-map-parseint-结果是什么-为什么-字节" aria-label="Permalink to &quot;102. [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;].map(parseInt) 结果是什么，为什么 （字节）&quot;">​</a></h3><h3 id="_103-防抖-节流是什么-如何实现-字节" tabindex="-1">103. 防抖，节流是什么，如何实现 （字节） <a class="header-anchor" href="#_103-防抖-节流是什么-如何实现-字节" aria-label="Permalink to &quot;103. 防抖，节流是什么，如何实现 （字节）&quot;">​</a></h3><h3 id="_104-介绍下-set、map、weakset-和-weakmap-的区别-字节" tabindex="-1">104. 介绍下 <em>Set、Map、WeakSet</em> 和 <em>WeakMap</em> 的区别（字节） <a class="header-anchor" href="#_104-介绍下-set、map、weakset-和-weakmap-的区别-字节" aria-label="Permalink to &quot;104. 介绍下 _Set、Map、WeakSet_ 和 _WeakMap_ 的区别（字节）&quot;">​</a></h3><h3 id="_105-settimeout、promise、async-await-的区别-字节" tabindex="-1">105. <em>setTimeout、Promise、Async/Await</em> 的区别（字节） <a class="header-anchor" href="#_105-settimeout、promise、async-await-的区别-字节" aria-label="Permalink to &quot;105. _setTimeout、Promise、Async/Await_ 的区别（字节）&quot;">​</a></h3><h3 id="_106-promise-构造函数是同步执行还是异步执行-那么-then-方法呢-字节" tabindex="-1">106. <em>Promise</em> 构造函数是同步执行还是异步执行，那么 <em>then</em> 方法呢？（字节） <a class="header-anchor" href="#_106-promise-构造函数是同步执行还是异步执行-那么-then-方法呢-字节" aria-label="Permalink to &quot;106. _Promise_ 构造函数是同步执行还是异步执行，那么 _then_ 方法呢？（字节）&quot;">​</a></h3><h3 id="_107-情人节福利题-如何实现一个-new-字节" tabindex="-1">107. 情人节福利题，如何实现一个 <em>new</em> （字节） <a class="header-anchor" href="#_107-情人节福利题-如何实现一个-new-字节" aria-label="Permalink to &quot;107. 情人节福利题，如何实现一个 _new_ （字节）&quot;">​</a></h3><p>let Parent = function (name, age) { this.name = name; this.age = age; }; Parent.prototype.sayName = function () { console.log(this.name); }; //自己定义的 new 方法 let newMethod = function (Parent, ...rest) { // 1.以构造器的 prototype 属性为原型，创建新对象； let child = Object.create(Parent.prototype); // 2.将 this 和调用参数传给构造器执行 let result = Parent.apply(child, rest); // 3.如果构造器没有手动返回对象，则返回第一步的对象 return typeof result === &#39;object&#39; ? result : child; }; //创建实例，将构造函数 Parent 与形参作为参数传入 const child = newMethod(Parent, &#39;echo&#39;, 26); child.sayName() //&#39;echo&#39;; //最后检验，与使用 new 的效果相同 console.log(child instanceof Parent)//true console.log(child.hasOwnProperty(&#39;name&#39;))//true console.log(child.hasOwnProperty(&#39;age&#39;))//true console.log(child.hasOwnProperty(&#39;sayName&#39;))//false</p><h3 id="_108-实现一个-sleep-函数-字节" tabindex="-1">108. 实现一个 <em>sleep</em> 函数（字节） <a class="header-anchor" href="#_108-实现一个-sleep-函数-字节" aria-label="Permalink to &quot;108. 实现一个 _sleep_ 函数（字节）&quot;">​</a></h3><h3 id="_109-使用-sort-对数组-3-15-8-29-102-22-进行排序-输出结果-字节" tabindex="-1">109. 使用 sort() 对数组 [3, 15, 8, 29, 102, 22] 进行排序，输出结果 （字节） <a class="header-anchor" href="#_109-使用-sort-对数组-3-15-8-29-102-22-进行排序-输出结果-字节" aria-label="Permalink to &quot;109. 使用 sort() 对数组 [3, 15, 8, 29, 102, 22] 进行排序，输出结果 （字节）&quot;">​</a></h3><h3 id="_110-实现-5-add-3-sub-2-百度" tabindex="-1">110. 实现 5.add(3).sub(2) (百度) <a class="header-anchor" href="#_110-实现-5-add-3-sub-2-百度" aria-label="Permalink to &quot;110. 实现 5.add(3).sub(2) (百度)&quot;">​</a></h3><h3 id="_111-给定两个数组-求交集" tabindex="-1">111. 给定两个数组，求交集 <a class="header-anchor" href="#_111-给定两个数组-求交集" aria-label="Permalink to &quot;111. 给定两个数组，求交集&quot;">​</a></h3><h3 id="_112-为什么普通-for-循环的性能远远高于-foreach-的性能-请解释其中的原因。" tabindex="-1">112. 为什么普通 <em>for</em> 循环的性能远远高于 <em>forEach</em> 的性能，请解释其中的原因。 <a class="header-anchor" href="#_112-为什么普通-for-循环的性能远远高于-foreach-的性能-请解释其中的原因。" aria-label="Permalink to &quot;112. 为什么普通 _for_ 循环的性能远远高于 _forEach_ 的性能，请解释其中的原因。&quot;">​</a></h3><h3 id="_113-实现一个字符串匹配算法-从长度为-n-的字符串-s-中-查找是否存在字符串-t-t-的长度是-m-若存在返回所在位置。" tabindex="-1">113. 实现一个字符串匹配算法，从长度为 n 的字符串 S 中，查找是否存在字符串 T，T 的长度是 m，若存在返回所在位置。 <a class="header-anchor" href="#_113-实现一个字符串匹配算法-从长度为-n-的字符串-s-中-查找是否存在字符串-t-t-的长度是-m-若存在返回所在位置。" aria-label="Permalink to &quot;113. 实现一个字符串匹配算法，从长度为 n 的字符串 S 中，查找是否存在字符串 T，T 的长度是 m，若存在返回所在位置。&quot;">​</a></h3><h3 id="_114-使用-javascript-proxy-实现简单的数据绑定" tabindex="-1">114. 使用 <em>JavaScript Proxy</em> 实现简单的数据绑定 <a class="header-anchor" href="#_114-使用-javascript-proxy-实现简单的数据绑定" aria-label="Permalink to &quot;114. 使用 _JavaScript Proxy_ 实现简单的数据绑定&quot;">​</a></h3><h3 id="_115-数组里面有-10-万个数据-取第一个元素和第-10-万个元素的时间相差多少-字节" tabindex="-1">115. 数组里面有 <em>10</em> 万个数据，取第一个元素和第 <em>10</em> 万个元素的时间相差多少（字节） <a class="header-anchor" href="#_115-数组里面有-10-万个数据-取第一个元素和第-10-万个元素的时间相差多少-字节" aria-label="Permalink to &quot;115. 数组里面有 _10_ 万个数据，取第一个元素和第 _10_ 万个元素的时间相差多少（字节）&quot;">​</a></h3><h3 id="_116-打印出-1-10000-以内的对称数" tabindex="-1">116. 打印出 <em>1~10000</em> 以内的对称数 <a class="header-anchor" href="#_116-打印出-1-10000-以内的对称数" aria-label="Permalink to &quot;116. 打印出 _1~10000_ 以内的对称数&quot;">​</a></h3><h3 id="_117-简述同步和异步的区别" tabindex="-1">117. 简述同步和异步的区别 <a class="header-anchor" href="#_117-简述同步和异步的区别" aria-label="Permalink to &quot;117. 简述同步和异步的区别&quot;">​</a></h3><h3 id="_118-怎么添加、移除、复制、创建、和查找节点" tabindex="-1">118. 怎么添加、移除、复制、创建、和查找节点 <a class="header-anchor" href="#_118-怎么添加、移除、复制、创建、和查找节点" aria-label="Permalink to &quot;118. 怎么添加、移除、复制、创建、和查找节点&quot;">​</a></h3><h3 id="_119-实现一个函数-clone-可以对-javascript-中的五种主要数据类型-number、string、-object、array、boolean-进行复制" tabindex="-1">119. 实现一个函数 <em>clone</em> 可以对 <em>Javascript</em> 中的五种主要数据类型（<em>Number、string、 Object、Array、Boolean</em>）进行复制 <a class="header-anchor" href="#_119-实现一个函数-clone-可以对-javascript-中的五种主要数据类型-number、string、-object、array、boolean-进行复制" aria-label="Permalink to &quot;119. 实现一个函数 _clone_ 可以对 _Javascript_ 中的五种主要数据类型（_Number、string、 Object、Array、Boolean_）进行复制&quot;">​</a></h3><h3 id="_120-如何消除一个数组里面重复的元素" tabindex="-1">120. 如何消除一个数组里面重复的元素 <a class="header-anchor" href="#_120-如何消除一个数组里面重复的元素" aria-label="Permalink to &quot;120. 如何消除一个数组里面重复的元素&quot;">​</a></h3><h3 id="_121-写一个返回闭包的函数" tabindex="-1">121. 写一个返回闭包的函数 <a class="header-anchor" href="#_121-写一个返回闭包的函数" aria-label="Permalink to &quot;121. 写一个返回闭包的函数&quot;">​</a></h3><h3 id="_122-使用递归完成-1-到-100-的累加" tabindex="-1">122. 使用递归完成 1 到 100 的累加 <a class="header-anchor" href="#_122-使用递归完成-1-到-100-的累加" aria-label="Permalink to &quot;122. 使用递归完成 1 到 100 的累加&quot;">​</a></h3><h3 id="_123-javascript-有哪几种数据类型" tabindex="-1">123. <em>Javascript</em> 有哪几种数据类型 <a class="header-anchor" href="#_123-javascript-有哪几种数据类型" aria-label="Permalink to &quot;123. _Javascript_ 有哪几种数据类型&quot;">​</a></h3><h3 id="_124-如何判断数据类型" tabindex="-1">124. 如何判断数据类型 <a class="header-anchor" href="#_124-如何判断数据类型" aria-label="Permalink to &quot;124. 如何判断数据类型&quot;">​</a></h3><h3 id="_125-console-log-1-2-和-console-log-1-2-的打印结果" tabindex="-1">125. console.log(1+&#39;2&#39;)和 console.log(1-&#39;2&#39;)的打印结果 <a class="header-anchor" href="#_125-console-log-1-2-和-console-log-1-2-的打印结果" aria-label="Permalink to &quot;125. console.log(1+&#39;2&#39;)和 console.log(1-&#39;2&#39;)的打印结果&quot;">​</a></h3><h3 id="_126-js-的事件委托是什么-原理是什么" tabindex="-1">126. <em>JS</em> 的事件委托是什么，原理是什么 <a class="header-anchor" href="#_126-js-的事件委托是什么-原理是什么" aria-label="Permalink to &quot;126. _JS_ 的事件委托是什么，原理是什么&quot;">​</a></h3><h3 id="_127-如何改变函数内部的-this-指针的指向" tabindex="-1">127. 如何改变函数内部的 <em>this</em> 指针的指向 <a class="header-anchor" href="#_127-如何改变函数内部的-this-指针的指向" aria-label="Permalink to &quot;127. 如何改变函数内部的 _this_ 指针的指向&quot;">​</a></h3><h3 id="_128-js-延迟加载的方式有哪些" tabindex="-1">128. <em>JS</em> 延迟加载的方式有哪些？ <a class="header-anchor" href="#_128-js-延迟加载的方式有哪些" aria-label="Permalink to &quot;128. _JS_ 延迟加载的方式有哪些？&quot;">​</a></h3><h3 id="_129-说说严格模式的限制" tabindex="-1">129. 说说严格模式的限制 <a class="header-anchor" href="#_129-说说严格模式的限制" aria-label="Permalink to &quot;129. 说说严格模式的限制&quot;">​</a></h3><h3 id="_130-attribute-和-property-的区别是什么" tabindex="-1">130. <em>attribute</em> 和 <em>property</em> 的区别是什么？ <a class="header-anchor" href="#_130-attribute-和-property-的区别是什么" aria-label="Permalink to &quot;130. _attribute_ 和 _property_ 的区别是什么？&quot;">​</a></h3><h3 id="_131-es6-能写-class-么-为什么会出现-class-这种东西" tabindex="-1">131. <em>ES6</em> 能写 <em>class</em> 么，为什么会出现 <em>class</em> 这种东西? <a class="header-anchor" href="#_131-es6-能写-class-么-为什么会出现-class-这种东西" aria-label="Permalink to &quot;131. _ES6_ 能写 _class_ 么，为什么会出现 _class_ 这种东西?&quot;">​</a></h3><h3 id="_132-常见兼容性问题" tabindex="-1">132. 常见兼容性问题 <a class="header-anchor" href="#_132-常见兼容性问题" aria-label="Permalink to &quot;132. 常见兼容性问题&quot;">​</a></h3><h3 id="_133-函数防抖节流的原理" tabindex="-1">133. 函数防抖节流的原理 <a class="header-anchor" href="#_133-函数防抖节流的原理" aria-label="Permalink to &quot;133. 函数防抖节流的原理&quot;">​</a></h3><h3 id="_134-原始类型有哪几种-null-是对象吗" tabindex="-1">134. 原始类型有哪几种？<em>null</em> 是对象吗？ <a class="header-anchor" href="#_134-原始类型有哪几种-null-是对象吗" aria-label="Permalink to &quot;134. 原始类型有哪几种？_null_ 是对象吗？&quot;">​</a></h3><h3 id="_135-为什么-console-log-0-2-0-1-0-3-false" tabindex="-1">135. 为什么 <em>console.log(0.2+0.1==0.3) // false</em> <a class="header-anchor" href="#_135-为什么-console-log-0-2-0-1-0-3-false" aria-label="Permalink to &quot;135. 为什么 _console.log(0.2+0.1==0.3) // false_&quot;">​</a></h3><h3 id="_136-说一下-js-中类型转换的规则" tabindex="-1">136. 说一下 <em>JS</em> 中类型转换的规则？ <a class="header-anchor" href="#_136-说一下-js-中类型转换的规则" aria-label="Permalink to &quot;136. 说一下 _JS_ 中类型转换的规则？&quot;">​</a></h3><h3 id="_137-深拷贝和浅拷贝的区别-如何实现" tabindex="-1">137. 深拷贝和浅拷贝的区别？如何实现 <a class="header-anchor" href="#_137-深拷贝和浅拷贝的区别-如何实现" aria-label="Permalink to &quot;137. 深拷贝和浅拷贝的区别？如何实现&quot;">​</a></h3><h3 id="_138-如何判断-this-箭头函数的-this-是什么" tabindex="-1">138. 如何判断 <em>this</em>？箭头函数的 <em>this</em> 是什么 <a class="header-anchor" href="#_138-如何判断-this-箭头函数的-this-是什么" aria-label="Permalink to &quot;138. 如何判断 _this_？箭头函数的 _this_ 是什么&quot;">​</a></h3><h3 id="_139-call、apply-以及-bind-函数内部实现是怎么样的" tabindex="-1">139. <em>call、apply</em> 以及 <em>bind</em> 函数内部实现是怎么样的 <a class="header-anchor" href="#_139-call、apply-以及-bind-函数内部实现是怎么样的" aria-label="Permalink to &quot;139. _call、apply_ 以及 _bind_ 函数内部实现是怎么样的&quot;">​</a></h3><h3 id="_140-为什么会出现-settimeout-倒计时误差-如何减少" tabindex="-1">140. 为什么会出现 <em>setTimeout</em> 倒计时误差？如何减少 <a class="header-anchor" href="#_140-为什么会出现-settimeout-倒计时误差-如何减少" aria-label="Permalink to &quot;140. 为什么会出现 _setTimeout_ 倒计时误差？如何减少&quot;">​</a></h3><h3 id="_141-谈谈你对-js-执行上下文栈和作用域链的理解" tabindex="-1">141. 谈谈你对 <em>JS</em> 执行上下文栈和作用域链的理解 <a class="header-anchor" href="#_141-谈谈你对-js-执行上下文栈和作用域链的理解" aria-label="Permalink to &quot;141. 谈谈你对 _JS_ 执行上下文栈和作用域链的理解&quot;">​</a></h3><h3 id="_142-new-的原理是什么-通过-new-的方式创建对象和通过字面量创建有什么区别" tabindex="-1">142. <em>new</em> 的原理是什么？通过 <em>new</em> 的方式创建对象和通过字面量创建有什么区别？ <a class="header-anchor" href="#_142-new-的原理是什么-通过-new-的方式创建对象和通过字面量创建有什么区别" aria-label="Permalink to &quot;142. _new_ 的原理是什么？通过 _new_ 的方式创建对象和通过字面量创建有什么区别？&quot;">​</a></h3><h3 id="_143-prototype-和-proto-区别是什么" tabindex="-1">143. <em>prototype</em> 和 __<em>proto</em>__ 区别是什么？ <a class="header-anchor" href="#_143-prototype-和-proto-区别是什么" aria-label="Permalink to &quot;143. _prototype_ 和 \\_\\__proto_\\_\\_ 区别是什么？&quot;">​</a></h3><h3 id="_144-使用-es5-实现一个继承" tabindex="-1">144. 使用 ES5 实现一个继承？ <a class="header-anchor" href="#_144-使用-es5-实现一个继承" aria-label="Permalink to &quot;144. 使用 ES5 实现一个继承？&quot;">​</a></h3><h3 id="_145-取数组的最大值-es5、es6" tabindex="-1">145. 取数组的最大值（<em>ES5、ES6</em>） <a class="header-anchor" href="#_145-取数组的最大值-es5、es6" aria-label="Permalink to &quot;145. 取数组的最大值（_ES5、ES6_）&quot;">​</a></h3><h3 id="_146-es6-新的特性有哪些" tabindex="-1">146. <em>ES6</em> 新的特性有哪些？ <a class="header-anchor" href="#_146-es6-新的特性有哪些" aria-label="Permalink to &quot;146. _ES6_ 新的特性有哪些？&quot;">​</a></h3><h3 id="_147-promise-有几种状态-promise-有什么优缺点" tabindex="-1">147. <em>Promise</em> 有几种状态, <em>Promise</em> 有什么优缺点 ? <a class="header-anchor" href="#_147-promise-有几种状态-promise-有什么优缺点" aria-label="Permalink to &quot;147. _Promise_ 有几种状态, _Promise_ 有什么优缺点 ?&quot;">​</a></h3><h3 id="_148-promise-构造函数是同步还是异步执行-then-呢-promise-如何实现-then-处理" tabindex="-1">148. <em>Promise</em> 构造函数是同步还是异步执行，<em>then</em> 呢 ? <em>Promise</em> 如何实现 <em>then</em> 处理 ? <a class="header-anchor" href="#_148-promise-构造函数是同步还是异步执行-then-呢-promise-如何实现-then-处理" aria-label="Permalink to &quot;148. _Promise_ 构造函数是同步还是异步执行，_then_ 呢 ? _Promise_ 如何实现 _then_ 处理 ?&quot;">​</a></h3><h3 id="_149-promise-和-settimeout-的区别" tabindex="-1">149. <em>Promise</em> 和 <em>setTimeout</em> 的区别 ? <a class="header-anchor" href="#_149-promise-和-settimeout-的区别" aria-label="Permalink to &quot;149. _Promise_ 和 _setTimeout_ 的区别 ?&quot;">​</a></h3><h3 id="_150-如何实现-promise-all" tabindex="-1">150. 如何实现 <em>Promise.all</em> ? <a class="header-anchor" href="#_150-如何实现-promise-all" aria-label="Permalink to &quot;150. 如何实现 _Promise.all_ ?&quot;">​</a></h3><h3 id="_151-如何实现-promise-finally" tabindex="-1">151. 如何实现 <em>Promise.finally</em> ? <a class="header-anchor" href="#_151-如何实现-promise-finally" aria-label="Permalink to &quot;151. 如何实现 _Promise.finally_ ?&quot;">​</a></h3><h3 id="_152-如何判断-img-加载完成" tabindex="-1">152. 如何判断 <em>img</em> 加载完成 <a class="header-anchor" href="#_152-如何判断-img-加载完成" aria-label="Permalink to &quot;152. 如何判断 _img_ 加载完成&quot;">​</a></h3><h3 id="_153-如何阻止冒泡" tabindex="-1">153. 如何阻止冒泡？ <a class="header-anchor" href="#_153-如何阻止冒泡" aria-label="Permalink to &quot;153. 如何阻止冒泡？&quot;">​</a></h3><h3 id="_154-如何阻止默认事件" tabindex="-1">154. 如何阻止默认事件？ <a class="header-anchor" href="#_154-如何阻止默认事件" aria-label="Permalink to &quot;154. 如何阻止默认事件？&quot;">​</a></h3><h3 id="_155-如何用原生-js-给一个按钮绑定两个-onclick-事件" tabindex="-1">155. 如何用原生 <em>js</em> 给一个按钮绑定两个 <em>onclick</em> 事件？ <a class="header-anchor" href="#_155-如何用原生-js-给一个按钮绑定两个-onclick-事件" aria-label="Permalink to &quot;155. 如何用原生 _js_ 给一个按钮绑定两个 _onclick_ 事件？&quot;">​</a></h3><h3 id="_156-拖拽会用到哪些事件" tabindex="-1">156. 拖拽会用到哪些事件 <a class="header-anchor" href="#_156-拖拽会用到哪些事件" aria-label="Permalink to &quot;156. 拖拽会用到哪些事件&quot;">​</a></h3><h3 id="_157-document-write-和-innerhtml-的区别" tabindex="-1">157. <em>document.write</em> 和 <em>innerHTML</em> 的区别 <a class="header-anchor" href="#_157-document-write-和-innerhtml-的区别" aria-label="Permalink to &quot;157. _document.write_ 和 _innerHTML_ 的区别&quot;">​</a></h3><h3 id="_158-jquery-的事件委托方法-bind-、live、delegate、one、on-之间有什么区别" tabindex="-1">158. <em>jQuery</em> 的事件委托方法 <em>bind 、live、delegate、one、on</em> 之间有什么区别？ <a class="header-anchor" href="#_158-jquery-的事件委托方法-bind-、live、delegate、one、on-之间有什么区别" aria-label="Permalink to &quot;158. _jQuery_ 的事件委托方法 _bind 、live、delegate、one、on_ 之间有什么区别？&quot;">​</a></h3><h3 id="_159-document-ready-方法和-window-onload-有什么区别" tabindex="-1">159. <em>$(document).ready</em> 方法和 <em>window.onload</em> 有什么区别？ <a class="header-anchor" href="#_159-document-ready-方法和-window-onload-有什么区别" aria-label="Permalink to &quot;159. _$(document).ready_ 方法和 _window.onload_ 有什么区别？&quot;">​</a></h3><h3 id="_160-jquery-中-get-提交和-post-提交有区别吗" tabindex="-1">160. jquery 中$.get()提交和$.post()提交有区别吗？ <a class="header-anchor" href="#_160-jquery-中-get-提交和-post-提交有区别吗" aria-label="Permalink to &quot;160. jquery 中$.get()提交和$.post()提交有区别吗？&quot;">​</a></h3><h3 id="_161-await-async-如何实现-阿里" tabindex="-1">161. <em>await async</em> 如何实现 （阿里） <a class="header-anchor" href="#_161-await-async-如何实现-阿里" aria-label="Permalink to &quot;161. _await async_ 如何实现 （阿里）&quot;">​</a></h3><h3 id="_162-clientwidth-offsetwidth-scrollwidth-的区别" tabindex="-1">162. <em>clientWidth,offsetWidth,scrollWidth</em> 的区别 <a class="header-anchor" href="#_162-clientwidth-offsetwidth-scrollwidth-的区别" aria-label="Permalink to &quot;162. _clientWidth,offsetWidth,scrollWidth_ 的区别&quot;">​</a></h3><h3 id="_163-产生一个不重复的随机数组" tabindex="-1">163. 产生一个不重复的随机数组 <a class="header-anchor" href="#_163-产生一个不重复的随机数组" aria-label="Permalink to &quot;163. 产生一个不重复的随机数组&quot;">​</a></h3><h3 id="_164-continue-和-break-的区别" tabindex="-1">164. <em>continue</em> 和 <em>break</em> 的区别 <a class="header-anchor" href="#_164-continue-和-break-的区别" aria-label="Permalink to &quot;164. _continue_ 和 _break_ 的区别&quot;">​</a></h3><h3 id="_165-如何在-jquery-上扩展插件-以及内部原理-腾讯" tabindex="-1">165. 如何在 <em>jquery</em> 上扩展插件，以及内部原理（腾讯） <a class="header-anchor" href="#_165-如何在-jquery-上扩展插件-以及内部原理-腾讯" aria-label="Permalink to &quot;165. 如何在 _jquery_ 上扩展插件，以及内部原理（腾讯）&quot;">​</a></h3><h3 id="_166-async-await-如何捕获错误" tabindex="-1">166. <em>async/await</em> 如何捕获错误 <a class="header-anchor" href="#_166-async-await-如何捕获错误" aria-label="Permalink to &quot;166. _async/await_ 如何捕获错误&quot;">​</a></h3><h3 id="_167-proxy-对比-object-defineproperty-的优势" tabindex="-1">167. <em>Proxy</em> 对比 <em>Object.defineProperty</em> 的优势 <a class="header-anchor" href="#_167-proxy-对比-object-defineproperty-的优势" aria-label="Permalink to &quot;167. _Proxy_ 对比 _Object.defineProperty_ 的优势&quot;">​</a></h3><h3 id="_168-原型链-可以改变原型链的规则吗" tabindex="-1">168. 原型链，可以改变原型链的规则吗? <a class="header-anchor" href="#_168-原型链-可以改变原型链的规则吗" aria-label="Permalink to &quot;168. 原型链，可以改变原型链的规则吗?&quot;">​</a></h3><h3 id="_169-讲一讲继承的所有方式都有什么-手写一个寄生组合式继承" tabindex="-1">169. 讲一讲继承的所有方式都有什么？手写一个寄生组合式继承 <a class="header-anchor" href="#_169-讲一讲继承的所有方式都有什么-手写一个寄生组合式继承" aria-label="Permalink to &quot;169. 讲一讲继承的所有方式都有什么？手写一个寄生组合式继承&quot;">​</a></h3><h3 id="_170-js-基本数据类型有哪些-栈和堆有什么区别-为什么要这样存储。-快手" tabindex="-1">170. <em>JS</em> 基本数据类型有哪些？栈和堆有什么区别，为什么要这样存储。（快手） <a class="header-anchor" href="#_170-js-基本数据类型有哪些-栈和堆有什么区别-为什么要这样存储。-快手" aria-label="Permalink to &quot;170. _JS_ 基本数据类型有哪些？栈和堆有什么区别，为什么要这样存储。（快手）&quot;">​</a></h3><h3 id="_171-settimeout-0-什么时候执行" tabindex="-1">171. <em>setTimeout(() =&gt; {}, 0)</em> 什么时候执行 <a class="header-anchor" href="#_171-settimeout-0-什么时候执行" aria-label="Permalink to &quot;171. _setTimeout(() =&gt; {}, 0)_ 什么时候执行&quot;">​</a></h3><h3 id="_172-js-有函数重载吗-网易" tabindex="-1">172. <em>js</em> 有函数重载吗（网易） <a class="header-anchor" href="#_172-js-有函数重载吗-网易" aria-label="Permalink to &quot;172. _js_ 有函数重载吗（网易）&quot;">​</a></h3><h3 id="_173-给你一个数组-计算每个数出现的次数-如果每个数组返回的数都是独一无二的就返回-true-相反则返回的-flase" tabindex="-1">173. 给你一个数组，计算每个数出现的次数，如果每个数组返回的数都是独一无二的就返回 <em>true</em> 相反则返回的 <em>flase</em> <a class="header-anchor" href="#_173-给你一个数组-计算每个数出现的次数-如果每个数组返回的数都是独一无二的就返回-true-相反则返回的-flase" aria-label="Permalink to &quot;173. 给你一个数组，计算每个数出现的次数，如果每个数组返回的数都是独一无二的就返回 _true_ 相反则返回的 _flase_&quot;">​</a></h3><h3 id="_174-封装一个能够统计重复的字符的函数-例如-aaabbbdddddfff-转化为-3a3b5d3f" tabindex="-1">174. 封装一个能够统计重复的字符的函数，例如 <em>aaabbbdddddfff</em> 转化为 <em>3a3b5d3f</em> <a class="header-anchor" href="#_174-封装一个能够统计重复的字符的函数-例如-aaabbbdddddfff-转化为-3a3b5d3f" aria-label="Permalink to &quot;174. 封装一个能够统计重复的字符的函数，例如 _aaabbbdddddfff_ 转化为 _3a3b5d3f_&quot;">​</a></h3><h3 id="_175-写出代码的执行结果-并解释为什么" tabindex="-1">175. 写出代码的执行结果，并解释为什么？ <a class="header-anchor" href="#_175-写出代码的执行结果-并解释为什么" aria-label="Permalink to &quot;175. 写出代码的执行结果，并解释为什么？&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">a</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">a</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">a</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">a</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_176-写出代码的执行结果-并解释为什么" tabindex="-1">176. 写出代码的执行结果，并解释为什么？ <a class="header-anchor" href="#_176-写出代码的执行结果-并解释为什么" aria-label="Permalink to &quot;176. 写出代码的执行结果，并解释为什么？&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">alert</span><span style="color:#BABED8;">(a)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">a</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">a</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">10</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">alert</span><span style="color:#BABED8;">(a)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">a</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_177-写出下面程序的打印顺序-并简要说明原因" tabindex="-1">177. 写出下面程序的打印顺序，并简要说明原因 <a class="header-anchor" href="#_177-写出下面程序的打印顺序-并简要说明原因" aria-label="Permalink to &quot;177. 写出下面程序的打印顺序，并简要说明原因&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">setTimeout</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">set1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">then4</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">then2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pr1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">then1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">setTimeout</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">set2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">then3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_178-javascript-中什么是伪数组-如何将伪数组转换为标准数组" tabindex="-1">178. <em>javascript</em> 中什么是伪数组？如何将伪数组转换为标准数组 <a class="header-anchor" href="#_178-javascript-中什么是伪数组-如何将伪数组转换为标准数组" aria-label="Permalink to &quot;178. _javascript_ 中什么是伪数组？如何将伪数组转换为标准数组&quot;">​</a></h3><h3 id="_179-array-和-object-的区别" tabindex="-1">179. <em>array</em> 和 <em>object</em> 的区别 <a class="header-anchor" href="#_179-array-和-object-的区别" aria-label="Permalink to &quot;179. _array_ 和 _object_ 的区别&quot;">​</a></h3><h3 id="_180-jquery-事件委托" tabindex="-1">180. <em>jquery</em> 事件委托 <a class="header-anchor" href="#_180-jquery-事件委托" aria-label="Permalink to &quot;180. _jquery_ 事件委托&quot;">​</a></h3><h3 id="_181-js-基本数据类型" tabindex="-1">181. <em>JS</em> 基本数据类型 <a class="header-anchor" href="#_181-js-基本数据类型" aria-label="Permalink to &quot;181. _JS_ 基本数据类型&quot;">​</a></h3><h3 id="_182-请实现一个模块-math-支持链式调用math-add-2-4-minus-3-times-2" tabindex="-1">182. 请实现一个模块 <em>math</em>，支持链式调用<code>math.add(2,4).minus(3).times(2);</code> <a class="header-anchor" href="#_182-请实现一个模块-math-支持链式调用math-add-2-4-minus-3-times-2" aria-label="Permalink to &quot;182. 请实现一个模块 _math_，支持链式调用\`math.add(2,4).minus(3).times(2);\`&quot;">​</a></h3><h3 id="_183-请简述-es6-代码转成-es5-代码的实现思路。" tabindex="-1">183. 请简述 <em>ES6</em> 代码转成 <em>ES5</em> 代码的实现思路。 <a class="header-anchor" href="#_183-请简述-es6-代码转成-es5-代码的实现思路。" aria-label="Permalink to &quot;183. 请简述 _ES6_ 代码转成 _ES5_ 代码的实现思路。&quot;">​</a></h3><h3 id="_184-下列代码的执行结果" tabindex="-1">184. 下列代码的执行结果 <a class="header-anchor" href="#_184-下列代码的执行结果" aria-label="Permalink to &quot;184. 下列代码的执行结果&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">async1</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">async1 start</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">async2</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">async1 end</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">async2</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">async2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">script start</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">setTimeout</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">setTimeout</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">async1</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">promise1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">promise2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">script end</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_185-js-有哪些内置对象" tabindex="-1">185. <em>JS</em> 有哪些内置对象？ <a class="header-anchor" href="#_185-js-有哪些内置对象" aria-label="Permalink to &quot;185. _JS_ 有哪些内置对象？&quot;">​</a></h3><h3 id="_186-dom-怎样添加、移除、移动、复制、创建和查找节点" tabindex="-1">186. <em>DOM</em> 怎样添加、移除、移动、复制、创建和查找节点 <a class="header-anchor" href="#_186-dom-怎样添加、移除、移动、复制、创建和查找节点" aria-label="Permalink to &quot;186. _DOM_ 怎样添加、移除、移动、复制、创建和查找节点&quot;">​</a></h3><h3 id="_187-eval-是做什么的" tabindex="-1">187. <em>eval</em> 是做什么的？ <a class="header-anchor" href="#_187-eval-是做什么的" aria-label="Permalink to &quot;187. _eval_ 是做什么的？&quot;">​</a></h3><h3 id="_188-null-和-undefined-的区别" tabindex="-1">188. <em>null</em> 和 <em>undefined</em> 的区别？ <a class="header-anchor" href="#_188-null-和-undefined-的区别" aria-label="Permalink to &quot;188. _null_ 和 _undefined_ 的区别？&quot;">​</a></h3><h3 id="_189-new-操作符具体干了什么呢" tabindex="-1">189. <em>new</em> 操作符具体干了什么呢？ <a class="header-anchor" href="#_189-new-操作符具体干了什么呢" aria-label="Permalink to &quot;189. _new_ 操作符具体干了什么呢？&quot;">​</a></h3><h3 id="_190-去除字符串中的空格" tabindex="-1">190. 去除字符串中的空格 <a class="header-anchor" href="#_190-去除字符串中的空格" aria-label="Permalink to &quot;190. 去除字符串中的空格&quot;">​</a></h3><h3 id="_191-常见的内存泄露-以及解决方案" tabindex="-1">191. 常见的内存泄露，以及解决方案 <a class="header-anchor" href="#_191-常见的内存泄露-以及解决方案" aria-label="Permalink to &quot;191. 常见的内存泄露，以及解决方案&quot;">​</a></h3><h3 id="_192-箭头函数和普通函数里面的-this-有什么区别" tabindex="-1">192. 箭头函数和普通函数里面的 <em>this</em> 有什么区别 <a class="header-anchor" href="#_192-箭头函数和普通函数里面的-this-有什么区别" aria-label="Permalink to &quot;192. 箭头函数和普通函数里面的 _this_ 有什么区别&quot;">​</a></h3><h3 id="_193-设计一个方法-ispalindrom-以判断是否回文-颠倒后的字符串和原来的字符串一样为回文" tabindex="-1">193. 设计⼀个⽅法(<em>isPalindrom</em>)以判断是否回⽂(颠倒后的字符串和原来的字符串⼀样为回⽂) <a class="header-anchor" href="#_193-设计一个方法-ispalindrom-以判断是否回文-颠倒后的字符串和原来的字符串一样为回文" aria-label="Permalink to &quot;193. 设计⼀个⽅法(_isPalindrom_)以判断是否回⽂(颠倒后的字符串和原来的字符串⼀样为回⽂)&quot;">​</a></h3><h3 id="_194-设计一个方法-findmaxduplicatechar-以统计字符串中出现最多次数的字符" tabindex="-1">194. 设计⼀个⽅法(<em>findMaxDuplicateChar</em>)以统计字符串中出现最多次数的字符 <a class="header-anchor" href="#_194-设计一个方法-findmaxduplicatechar-以统计字符串中出现最多次数的字符" aria-label="Permalink to &quot;194. 设计⼀个⽅法(_findMaxDuplicateChar_)以统计字符串中出现最多次数的字符&quot;">​</a></h3><h3 id="_195-设计一段代码-使得通过点击按钮可以在-span-中显示文本框中输入的值" tabindex="-1">195. 设计⼀段代码，使得通过点击按钮可以在 <em>span</em> 中显示⽂本框中输⼊的值 <a class="header-anchor" href="#_195-设计一段代码-使得通过点击按钮可以在-span-中显示文本框中输入的值" aria-label="Permalink to &quot;195. 设计⼀段代码，使得通过点击按钮可以在 _span_ 中显示⽂本框中输⼊的值&quot;">​</a></h3><h3 id="_196-map-和-foreach-的区别" tabindex="-1">196. <em>map</em> 和 <em>forEach</em> 的区别？ <a class="header-anchor" href="#_196-map-和-foreach-的区别" aria-label="Permalink to &quot;196. _map_ 和 _forEach_ 的区别？&quot;">​</a></h3><h3 id="_197-array-的常用方法" tabindex="-1">197. <em>Array</em> 的常用方法 <a class="header-anchor" href="#_197-array-的常用方法" aria-label="Permalink to &quot;197. _Array_ 的常用方法&quot;">​</a></h3><h3 id="_198-数组去重的多种实现方式" tabindex="-1">198. 数组去重的多种实现方式 <a class="header-anchor" href="#_198-数组去重的多种实现方式" aria-label="Permalink to &quot;198. 数组去重的多种实现方式&quot;">​</a></h3><h3 id="_199-什么是预解析-预编译" tabindex="-1">199. 什么是预解析（预编译） <a class="header-anchor" href="#_199-什么是预解析-预编译" aria-label="Permalink to &quot;199. 什么是预解析（预编译）&quot;">​</a></h3><h3 id="_200-原始值类型和引用值类型的区别是什么" tabindex="-1">200. 原始值类型和引用值类型的区别是什么？ <a class="header-anchor" href="#_200-原始值类型和引用值类型的区别是什么" aria-label="Permalink to &quot;200. 原始值类型和引用值类型的区别是什么？&quot;">​</a></h3><h3 id="_201-冒泡排序的思路-不用-sort" tabindex="-1">201. 冒泡排序的思路，不用 <em>sort</em> <a class="header-anchor" href="#_201-冒泡排序的思路-不用-sort" aria-label="Permalink to &quot;201. 冒泡排序的思路，不用 _sort_&quot;">​</a></h3><h3 id="_202-symbol-用途" tabindex="-1">202. <em>symbol</em> 用途 <a class="header-anchor" href="#_202-symbol-用途" aria-label="Permalink to &quot;202. _symbol_ 用途&quot;">​</a></h3><h3 id="_203-什么是函数式编程-应用场景是什么" tabindex="-1">203. 什么是函数式编程，应用场景是什么 <a class="header-anchor" href="#_203-什么是函数式编程-应用场景是什么" aria-label="Permalink to &quot;203. 什么是函数式编程，应用场景是什么&quot;">​</a></h3><h3 id="_204-事件以及事件相关的兼容性问题" tabindex="-1">204. 事件以及事件相关的兼容性问题 <a class="header-anchor" href="#_204-事件以及事件相关的兼容性问题" aria-label="Permalink to &quot;204. 事件以及事件相关的兼容性问题&quot;">​</a></h3><h3 id="_205-js-小数不精准-如何计算" tabindex="-1">205. <em>JS</em> 小数不精准，如何计算 <a class="header-anchor" href="#_205-js-小数不精准-如何计算" aria-label="Permalink to &quot;205. _JS_ 小数不精准，如何计算&quot;">​</a></h3><h3 id="_206-写一个-mysetinterval-fn-a-b-每次间隔-a-a-b-a-2b-的时间-然后写一个-myclear-停止上面的-mysetinterval" tabindex="-1">206. 写一个 <em>mySetInterVal(fn, a, b)</em>，每次间隔 <em>a,a+b,a+2b</em> 的时间，然后写一个 <em>myClear</em>，停止上面的 <em>mySetInterVal</em> <a class="header-anchor" href="#_206-写一个-mysetinterval-fn-a-b-每次间隔-a-a-b-a-2b-的时间-然后写一个-myclear-停止上面的-mysetinterval" aria-label="Permalink to &quot;206. 写一个 _mySetInterVal(fn, a, b)_，每次间隔 _a,a+b,a+2b_ 的时间，然后写一个 _myClear_，停止上面的 _mySetInterVal_&quot;">​</a></h3><h3 id="_207-合并二维有序数组成一维有序数组-归并排序的思路" tabindex="-1">207. 合并二维有序数组成一维有序数组，归并排序的思路 <a class="header-anchor" href="#_207-合并二维有序数组成一维有序数组-归并排序的思路" aria-label="Permalink to &quot;207. 合并二维有序数组成一维有序数组，归并排序的思路&quot;">​</a></h3><h3 id="_208-给定一个字符串-请你找出其中不含有重复字符的最长子串的长度。" tabindex="-1">208. 给定一个字符串，请你找出其中不含有重复字符的最长子串的长度。 <a class="header-anchor" href="#_208-给定一个字符串-请你找出其中不含有重复字符的最长子串的长度。" aria-label="Permalink to &quot;208. 给定一个字符串，请你找出其中不含有重复字符的最长子串的长度。&quot;">​</a></h3><h3 id="_209-有一堆整数-请把他们分成三份-确保每一份和尽量相等-11-42-23-4-5-6-4-5-6-11-23-42-56-78-90-滴滴-2020" tabindex="-1">209. 有一堆整数，请把他们分成三份，确保每一份和尽量相等（11，42，23，4，5，6 4 5 6 11 23 42 56 78 90）(滴滴 <em>2020</em>) <a class="header-anchor" href="#_209-有一堆整数-请把他们分成三份-确保每一份和尽量相等-11-42-23-4-5-6-4-5-6-11-23-42-56-78-90-滴滴-2020" aria-label="Permalink to &quot;209. 有一堆整数，请把他们分成三份，确保每一份和尽量相等（11，42，23，4，5，6 4 5 6 11 23 42 56 78 90）(滴滴 _2020_)&quot;">​</a></h3><h3 id="_210-手写发布订阅-头条-2020" tabindex="-1">210. 手写发布订阅（头条 2020） <a class="header-anchor" href="#_210-手写发布订阅-头条-2020" aria-label="Permalink to &quot;210. 手写发布订阅（头条 2020）&quot;">​</a></h3><h3 id="_211-手写用-es6proxy-如何实现-arr-1-的访问-滴滴-2020" tabindex="-1">211. 手写用 <em>ES6proxy</em> 如何实现 <em>arr[-1]</em> 的访问（滴滴 2020） <a class="header-anchor" href="#_211-手写用-es6proxy-如何实现-arr-1-的访问-滴滴-2020" aria-label="Permalink to &quot;211. 手写用 _ES6proxy_ 如何实现 _arr[-1]_ 的访问（滴滴 2020）&quot;">​</a></h3><h3 id="_212-下列代码执行结果" tabindex="-1">212. 下列代码执行结果 <a class="header-anchor" href="#_212-下列代码执行结果" aria-label="Permalink to &quot;212. 下列代码执行结果&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">setTimeout</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">process</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">nextTick</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">4</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">7</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">8</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">process</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">nextTick</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">6</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">setTimeout</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">9</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">process</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">nextTick</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">10</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">11</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">12</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_213-number-的存储空间是多大-如果后台发送了一个超过最大自己的数字怎么办" tabindex="-1">213. Number() 的存储空间是多大？如果后台发送了一个超过最大自己的数字怎么办 <a class="header-anchor" href="#_213-number-的存储空间是多大-如果后台发送了一个超过最大自己的数字怎么办" aria-label="Permalink to &quot;213. Number() 的存储空间是多大？如果后台发送了一个超过最大自己的数字怎么办&quot;">​</a></h3><h3 id="_214-事件是如何实现的-字节-2020" tabindex="-1">214. 事件是如何实现的？(字节 2020) <a class="header-anchor" href="#_214-事件是如何实现的-字节-2020" aria-label="Permalink to &quot;214. 事件是如何实现的？(字节 2020)&quot;">​</a></h3><h3 id="_215-下列代码执行结果" tabindex="-1">215. 下列代码执行结果 <a class="header-anchor" href="#_215-下列代码执行结果" aria-label="Permalink to &quot;215. 下列代码执行结果&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">4</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">6</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_216-判断数组的方法-请分别介绍它们之间的区别和优劣" tabindex="-1">216. 判断数组的方法，请分别介绍它们之间的区别和优劣 <a class="header-anchor" href="#_216-判断数组的方法-请分别介绍它们之间的区别和优劣" aria-label="Permalink to &quot;216. 判断数组的方法，请分别介绍它们之间的区别和优劣&quot;">​</a></h3><h3 id="_217-javascript-中的数组和函数在内存中是如何存储的" tabindex="-1">217. JavaScript 中的数组和函数在内存中是如何存储的？ <a class="header-anchor" href="#_217-javascript-中的数组和函数在内存中是如何存储的" aria-label="Permalink to &quot;217. JavaScript 中的数组和函数在内存中是如何存储的？&quot;">​</a></h3><h3 id="_218-javascript-是如何运行的-解释型语言和编译型语言的差异是什么" tabindex="-1">218. <em>JavaScript</em> 是如何运行的？解释型语言和编译型语言的差异是什么？ <a class="header-anchor" href="#_218-javascript-是如何运行的-解释型语言和编译型语言的差异是什么" aria-label="Permalink to &quot;218. _JavaScript_ 是如何运行的？解释型语言和编译型语言的差异是什么？&quot;">​</a></h3><h3 id="_219-列举你所了解的编程范式" tabindex="-1">219. 列举你所了解的编程范式？ <a class="header-anchor" href="#_219-列举你所了解的编程范式" aria-label="Permalink to &quot;219. 列举你所了解的编程范式？&quot;">​</a></h3><h3 id="_220-什么是面向切面-aop-的编程" tabindex="-1">220. 什么是面向切面（AOP）的编程？ <a class="header-anchor" href="#_220-什么是面向切面-aop-的编程" aria-label="Permalink to &quot;220. 什么是面向切面（AOP）的编程？&quot;">​</a></h3><h3 id="_221-javascript-中的-const-数组可以进行-push-操作吗-为什么" tabindex="-1">221. <em>JavaScript</em> 中的 <em>const</em> 数组可以进行 <em>push</em> 操作吗？为什么？ <a class="header-anchor" href="#_221-javascript-中的-const-数组可以进行-push-操作吗-为什么" aria-label="Permalink to &quot;221. _JavaScript_ 中的 _const_ 数组可以进行 _push_ 操作吗？为什么？&quot;">​</a></h3><h3 id="_222-javascript-中对象的属性描述符有哪些-分别有什么作用" tabindex="-1">222. JavaScript 中对象的属性描述符有哪些？分别有什么作用？ <a class="header-anchor" href="#_222-javascript-中对象的属性描述符有哪些-分别有什么作用" aria-label="Permalink to &quot;222. JavaScript 中对象的属性描述符有哪些？分别有什么作用？&quot;">​</a></h3><h3 id="_223-javascript-中-console-有哪些-api" tabindex="-1">223. <em>JavaScript</em> 中 <em>console</em> 有哪些 <em>api</em> ? <a class="header-anchor" href="#_223-javascript-中-console-有哪些-api" aria-label="Permalink to &quot;223. _JavaScript_ 中 _console_ 有哪些 _api_ ?&quot;">​</a></h3><h3 id="_224-简单对比一下-callback、promise、generator、async-几个异步-api-的优劣" tabindex="-1">224. 简单对比一下 <em>Callback、Promise、Generator、Async</em> 几个异步 <em>API</em> 的优劣？ <a class="header-anchor" href="#_224-简单对比一下-callback、promise、generator、async-几个异步-api-的优劣" aria-label="Permalink to &quot;224. 简单对比一下 _Callback、Promise、Generator、Async_ 几个异步 _API_ 的优劣？&quot;">​</a></h3><h3 id="_225-object-defineproperty-有哪几个参数-各自都有什么作用" tabindex="-1">225. <em>Object.defineProperty</em> 有哪几个参数？各自都有什么作用 <a class="header-anchor" href="#_225-object-defineproperty-有哪几个参数-各自都有什么作用" aria-label="Permalink to &quot;225. _Object.defineProperty_ 有哪几个参数？各自都有什么作用&quot;">​</a></h3><h3 id="_226-object-defineproperty-和-es6-的-proxy-有什么区别" tabindex="-1">226. <em>Object.defineProperty</em> 和 <em>ES6</em> 的 <em>Proxy</em> 有什么区别？ <a class="header-anchor" href="#_226-object-defineproperty-和-es6-的-proxy-有什么区别" aria-label="Permalink to &quot;226. _Object.defineProperty_ 和 _ES6_ 的 _Proxy_ 有什么区别？&quot;">​</a></h3><h3 id="_227-intanceof-操作符的实现原理及实现" tabindex="-1">227. <em>intanceof</em> 操作符的实现原理及实现 <a class="header-anchor" href="#_227-intanceof-操作符的实现原理及实现" aria-label="Permalink to &quot;227. _intanceof_ 操作符的实现原理及实现&quot;">​</a></h3><h3 id="_228-强制类型转换规则" tabindex="-1">228. 强制类型转换规则？ <a class="header-anchor" href="#_228-强制类型转换规则" aria-label="Permalink to &quot;228. 强制类型转换规则？&quot;">​</a></h3><h3 id="_229-object-is-与比较操作符-、-的区别" tabindex="-1">229. <em>Object.is</em>( ) 与比较操作符 “===”、“==” 的区别 <a class="header-anchor" href="#_229-object-is-与比较操作符-、-的区别" aria-label="Permalink to &quot;229. _Object.is_( ) 与比较操作符 “===”、“==” 的区别&quot;">​</a></h3><h3 id="_230-操作符什么时候用于字符串的拼接" tabindex="-1">230. <code>+</code> 操作符什么时候用于字符串的拼接？ <a class="header-anchor" href="#_230-操作符什么时候用于字符串的拼接" aria-label="Permalink to &quot;230. \`+\` 操作符什么时候用于字符串的拼接？&quot;">​</a></h3><h3 id="_231-object-assign-和扩展运算法是深拷贝还是浅拷贝" tabindex="-1">231. <em>object.assign</em> 和扩展运算法是深拷贝还是浅拷贝 <a class="header-anchor" href="#_231-object-assign-和扩展运算法是深拷贝还是浅拷贝" aria-label="Permalink to &quot;231. _object.assign_ 和扩展运算法是深拷贝还是浅拷贝&quot;">​</a></h3><h3 id="_232-const-对象的属性可以修改吗" tabindex="-1">232. <em>const</em> 对象的属性可以修改吗 <a class="header-anchor" href="#_232-const-对象的属性可以修改吗" aria-label="Permalink to &quot;232. _const_ 对象的属性可以修改吗&quot;">​</a></h3><h3 id="_233-如果-new-一个箭头函数的会怎么样" tabindex="-1">233. 如果 <em>new</em> 一个箭头函数的会怎么样 <a class="header-anchor" href="#_233-如果-new-一个箭头函数的会怎么样" aria-label="Permalink to &quot;233. 如果 _new_ 一个箭头函数的会怎么样&quot;">​</a></h3><h3 id="_234-扩展运算符的作用及使用场景" tabindex="-1">234. 扩展运算符的作用及使用场景 <a class="header-anchor" href="#_234-扩展运算符的作用及使用场景" aria-label="Permalink to &quot;234. 扩展运算符的作用及使用场景&quot;">​</a></h3><h3 id="_235-proxy-可以实现什么功能" tabindex="-1">235. <em>Proxy</em> 可以实现什么功能？ <a class="header-anchor" href="#_235-proxy-可以实现什么功能" aria-label="Permalink to &quot;235. _Proxy_ 可以实现什么功能？&quot;">​</a></h3><h3 id="_236-对象与数组的解构的理解" tabindex="-1">236. 对象与数组的解构的理解 <a class="header-anchor" href="#_236-对象与数组的解构的理解" aria-label="Permalink to &quot;236. 对象与数组的解构的理解&quot;">​</a></h3><h3 id="_237-如何提取高度嵌套的对象里的指定属性" tabindex="-1">237. 如何提取高度嵌套的对象里的指定属性？ <a class="header-anchor" href="#_237-如何提取高度嵌套的对象里的指定属性" aria-label="Permalink to &quot;237. 如何提取高度嵌套的对象里的指定属性？&quot;">​</a></h3><h3 id="_238-unicode、utf-8、utf-16、utf-32-的区别" tabindex="-1">238. <em>Unicode、UTF-8、UTF-16、UTF-32</em> 的区别？ <a class="header-anchor" href="#_238-unicode、utf-8、utf-16、utf-32-的区别" aria-label="Permalink to &quot;238. _Unicode、UTF-8、UTF-16、UTF-32_ 的区别？&quot;">​</a></h3><h3 id="_239-为什么函数的-arguments-参数是类数组而不是数组-如何遍历类数组" tabindex="-1">239. 为什么函数的 <em>arguments</em> 参数是类数组而不是数组？如何遍历类数组? <a class="header-anchor" href="#_239-为什么函数的-arguments-参数是类数组而不是数组-如何遍历类数组" aria-label="Permalink to &quot;239. 为什么函数的 _arguments_ 参数是类数组而不是数组？如何遍历类数组?&quot;">​</a></h3><h3 id="_240-escape、encodeuri、encodeuricomponent-的区别" tabindex="-1">240. <em>escape、encodeURI、encodeURIComponent</em> 的区别 <a class="header-anchor" href="#_240-escape、encodeuri、encodeuricomponent-的区别" aria-label="Permalink to &quot;240. _escape、encodeURI、encodeURIComponent_ 的区别&quot;">​</a></h3><h3 id="_241-use-strict-是什么意思-使用它区别是什么" tabindex="-1">241. <em>use strict</em> 是什么意思 ? 使用它区别是什么？ <a class="header-anchor" href="#_241-use-strict-是什么意思-使用它区别是什么" aria-label="Permalink to &quot;241. _use strict_ 是什么意思 ? 使用它区别是什么？&quot;">​</a></h3><h3 id="_242-for-in-和-for-of-的区别" tabindex="-1">242. <em>for...in</em> 和 <em>for...of</em> 的区别 <a class="header-anchor" href="#_242-for-in-和-for-of-的区别" aria-label="Permalink to &quot;242. _for...in_ 和 _for...of_ 的区别&quot;">​</a></h3><h3 id="_243-ajax、axios、fetch-的区别" tabindex="-1">243. <em>ajax、axios、fetch</em> 的区别 <a class="header-anchor" href="#_243-ajax、axios、fetch-的区别" aria-label="Permalink to &quot;243. _ajax、axios、fetch_ 的区别&quot;">​</a></h3><h3 id="_244-下面代码的输出是什么-d" tabindex="-1">244. 下面代码的输出是什么？（ <em>D</em> ） <a class="header-anchor" href="#_244-下面代码的输出是什么-d" aria-label="Permalink to &quot;244. 下面代码的输出是什么？（ _D_ ）&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">sayHi</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">name</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">age</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Lydia</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">age</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">21</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">sayHi</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>Lydia</em> 和 <em>undefined</em></li><li>B: <em>Lydia</em> 和 <em>ReferenceError</em></li><li>C: <em>ReferenceError</em> 和 <em>21</em></li><li>D: <em>undefined</em> 和 <em>ReferenceError</em></li></ul><h3 id="_245-下面代码的输出是什么-c" tabindex="-1">245. 下面代码的输出是什么？（ <em>C</em> ） <a class="header-anchor" href="#_245-下面代码的输出是什么-c" aria-label="Permalink to &quot;245. 下面代码的输出是什么？（ _C_ ）&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> (</span><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> (</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>A: <em>0 1 2</em> 和 <em>0 1 2</em></li><li>B: <em>0 1 2</em> 和 <em>3 3 3</em></li><li>C: <em>3 3 3</em> 和 <em>0 1 2</em></li></ul><h3 id="_246-下面代码的输出是什么-b" tabindex="-1">246. 下面代码的输出是什么？（ <em>B</em> ） <a class="header-anchor" href="#_246-下面代码的输出是什么-b" aria-label="Permalink to &quot;246. 下面代码的输出是什么？（ _B_ ）&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> shape </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">radius</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">diameter</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">radius</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">perimeter</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">PI </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">radius</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">shape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">diameter</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">shape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">perimeter</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>20</em> 和 <em>62.83185307179586</em></li><li>B: <em>20</em> 和 <em>NaN</em></li><li>C: <em>20</em> 和 <em>63</em></li><li>D: <em>NaN</em> 和 <em>63</em></li></ul><h3 id="_247-下面代码的输出是什么-a" tabindex="-1">247. 下面代码的输出是什么？（ <em>A</em> ） <a class="header-anchor" href="#_247-下面代码的输出是什么-a" aria-label="Permalink to &quot;247. 下面代码的输出是什么？（ _A_ ）&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">+true;</span></span>
<span class="line"><span style="color:#babed8;">!&quot;Lydia&quot;;</span></span></code></pre></div><ul><li>A: <em>1</em> 和 <em>false</em></li><li>B: <em>false</em> 和 <em>NaN</em></li><li>C: <em>false</em> 和 <em>false</em></li></ul><h3 id="_248-哪个选项是不正确的-a" tabindex="-1">248. 哪个选项是不正确的？（ <em>A</em> ） <a class="header-anchor" href="#_248-哪个选项是不正确的-a" aria-label="Permalink to &quot;248. 哪个选项是不正确的？（ _A_ ）&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> bird </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">size</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">small</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> mouse </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Mickey</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">small</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><ul><li>A: <em>mouse.bird.size</em></li><li>B: <em>mouse[bird.size]</em></li><li>C: <em>mouse[bird[&quot;size&quot;]]</em></li><li>D: 以上选项都对</li></ul><h3 id="_249-下面代码的输出是什么-a" tabindex="-1">249. 下面代码的输出是什么？（ <em>A</em> ） <a class="header-anchor" href="#_249-下面代码的输出是什么-a" aria-label="Permalink to &quot;249. 下面代码的输出是什么？（ _A_ ）&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> c </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">greeting</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hey!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> d</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">d </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> c</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">c</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">greeting </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(d</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">greeting)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>Hello</em></li><li>B: <em>undefined</em></li><li>C: <em>ReferenceError</em></li><li>D: <em>TypeError</em></li></ul><h3 id="_250-下面代码的输出是什么-c" tabindex="-1">250. 下面代码的输出是什么？（ <em>C</em> ） <a class="header-anchor" href="#_250-下面代码的输出是什么-c" aria-label="Permalink to &quot;250. 下面代码的输出是什么？（ _C_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> c </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(a </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> b)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(a </span><span style="color:#89DDFF;">===</span><span style="color:#BABED8;"> b)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(b </span><span style="color:#89DDFF;">===</span><span style="color:#BABED8;"> c)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>true</em> <em>false</em> <em>true</em></li><li>B: <em>false</em> <em>false</em> <em>true</em></li><li>C: <em>true</em> <em>false</em> <em>false</em></li><li>D: <em>false</em> <em>true</em> <em>true</em></li></ul><h3 id="_251-下面代码的输出是什么-d" tabindex="-1">251. 下面代码的输出是什么？（ <em>D</em> ） <a class="header-anchor" href="#_251-下面代码的输出是什么-d" aria-label="Permalink to &quot;251. 下面代码的输出是什么？（ _D_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Chameleon</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">static</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">colorChange</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">newColor</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">newColor</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">newColor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">({</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">newColor</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{})</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">newColor</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">newColor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> freddie </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Chameleon</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">newColor</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">purple</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">freddie</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">colorChange</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">orange</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>orange</em></li><li>B: <em>purple</em></li><li>C: <em>green</em></li><li>D: <em>TypeError</em></li></ul><h3 id="_252-下面代码的输出是什么-a" tabindex="-1">252. 下面代码的输出是什么？（ <em>A</em> ） <a class="header-anchor" href="#_252-下面代码的输出是什么-a" aria-label="Permalink to &quot;252. 下面代码的输出是什么？（ _A_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> greeting</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">greetign </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{};</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// Typo!</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(greetign)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>{}</em></li><li>B: <em>ReferenceError: greetign is not defined</em></li><li>C: <em>undefined</em></li></ul><h3 id="_253-当我们执行以下代码时会发生什么-a" tabindex="-1">253. 当我们执行以下代码时会发生什么？（ <em>A</em> ） <a class="header-anchor" href="#_253-当我们执行以下代码时会发生什么-a" aria-label="Permalink to &quot;253. 当我们执行以下代码时会发生什么？（ _A_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">bark</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Woof!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">bark</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">animal </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dog</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A 什么都不会发生</li><li>B: <em>SyntaxError. You cannot add properties to a function this way.</em></li><li>C: <em>undefined</em></li><li>D: <em>ReferenceError</em></li></ul><blockquote><p><strong>分析：</strong></p><p>因为函数也是对象！（原始类型之外的所有东西都是对象）</p><p>函数是一种特殊类型的对象，我们可以给函数添加属性，且此属性是可调用的。</p></blockquote><h3 id="_254-下面代码的输出是什么-a" tabindex="-1">254. 下面代码的输出是什么？（ <em>A</em> ） <a class="header-anchor" href="#_254-下面代码的输出是什么-a" aria-label="Permalink to &quot;254. 下面代码的输出是什么？（ _A_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Person</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">firstName</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">lastName</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">firstName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">firstName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">lastName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">lastName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> member </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Person</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Lydia</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hallie</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">Person</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getFullName</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">firstName </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">lastName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(member</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getFullName</span><span style="color:#BABED8;">())</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>TypeError</em></li><li>B: <em>SyntaxError</em></li><li>C: <em>Lydia Hallie</em></li><li>D: <em>undefined</em> <em>undefined</em></li></ul><h3 id="_255-下面代码的输出是什么-a" tabindex="-1">255. 下面代码的输出是什么？（ <em>A</em> ） <a class="header-anchor" href="#_255-下面代码的输出是什么-a" aria-label="Permalink to &quot;255. 下面代码的输出是什么？（ _A_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Person</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">firstName</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">lastName</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">firstName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">firstName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">lastName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">lastName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> lydia </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Person</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Lydia</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hallie</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> sarah </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Person</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Sarah</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Smith</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(lydia)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(sarah)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>Person { firstName: &quot;Lydia&quot;, lastName: &quot;Hallie&quot; }</em> 和 <em>undefined</em></li><li>B: <em>Person { firstName: &quot;Lydia&quot;, lastName: &quot;Hallie&quot; }</em> 和 <em>Person { firstName: &quot;Sarah&quot;, lastName: &quot;Smith&quot; }</em></li><li>C: <em>Person { firstName: &quot;Lydia&quot;, lastName: &quot;Hallie&quot; }</em> 和 <em>{}</em></li><li>D: <em>Person { firstName: &quot;Lydia&quot;, lastName: &quot;Hallie&quot; }</em> 和 <em>ReferenceError</em></li></ul><h3 id="_256-事件传播的三个阶段是什么-d" tabindex="-1">256. 事件传播的三个阶段是什么？（ <em>D</em> ） <a class="header-anchor" href="#_256-事件传播的三个阶段是什么-d" aria-label="Permalink to &quot;256. 事件传播的三个阶段是什么？（ _D_ ）&quot;">​</a></h3><ul><li>A: 目标 &gt; 捕获 &gt; 冒泡</li><li>B: 冒泡 &gt; 目标 &gt; 捕获</li><li>C: 目标 &gt; 冒泡 &gt; 捕获</li><li>D: 捕获 &gt; 目标 &gt; 冒泡</li></ul><h3 id="_257-下面代码的输出是什么-c" tabindex="-1">257. 下面代码的输出是什么？（ <em>C</em> ） <a class="header-anchor" href="#_257-下面代码的输出是什么-c" aria-label="Permalink to &quot;257. 下面代码的输出是什么？（ _C_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">b</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">a</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">b</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">sum</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>NaN</em></li><li>B: <em>TypeError</em></li><li>C: <em>&quot;12&quot;</em></li><li>D: <em>3</em></li></ul><h3 id="_258-下面代码的输出是什么-c" tabindex="-1">258. 下面代码的输出是什么？（ <em>C</em> ） <a class="header-anchor" href="#_258-下面代码的输出是什么-c" aria-label="Permalink to &quot;258. 下面代码的输出是什么？（ _C_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> number </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(number</span><span style="color:#89DDFF;">++</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">++</span><span style="color:#BABED8;">number)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(number)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>1 1 2</em></li><li>B: <em>1 2 2</em></li><li>C: <em>0 2 2</em></li><li>D: <em>0 1 2</em></li></ul><h3 id="_259-下面代码的输出是什么-b" tabindex="-1">259. 下面代码的输出是什么？（ <em>B</em> ） <a class="header-anchor" href="#_259-下面代码的输出是什么-b" aria-label="Permalink to &quot;259. 下面代码的输出是什么？（ _B_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">getPersonInfo</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">one</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">two</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">three</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">one</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">two</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">three</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> person </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Lydia</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> age </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">21</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getPersonInfo</span><span style="color:#89DDFF;">\`\${</span><span style="color:#BABED8;">person</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> is </span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">age</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> years old</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>Lydia</em> <em>21</em> <em>[&quot;&quot;, &quot;is&quot;, &quot;years old&quot;]</em></li><li>B: <em>[&quot;&quot;, &quot;is&quot;, &quot;years old&quot;]</em> <em>Lydia</em> <em>21</em></li><li>C: <em>Lydia</em> <em>[&quot;&quot;, &quot;is&quot;, &quot;years old&quot;]</em> <em>21</em></li></ul><h3 id="_260-下面代码的输出是什么-c" tabindex="-1">260. 下面代码的输出是什么？（ <em>C</em> ） <a class="header-anchor" href="#_260-下面代码的输出是什么-c" aria-label="Permalink to &quot;260. 下面代码的输出是什么？（ _C_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">checkAge</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">18</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">You are an adult!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">18</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">You are still an adult.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Hmm.. You don&#39;t have an age I guess</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">checkAge</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">18</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>You are an adult!</em></li><li>B: <em>You are still an adult.</em></li><li>C: <em>Hmm.. You don&#39;t have an age I guess</em></li></ul><h3 id="_261-下面代码的输出是什么-c" tabindex="-1">261. 下面代码的输出是什么？（ <em>C</em> ） <a class="header-anchor" href="#_261-下面代码的输出是什么-c" aria-label="Permalink to &quot;261. 下面代码的输出是什么？（ _C_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">getAge</span><span style="color:#89DDFF;">(...</span><span style="color:#BABED8;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">args</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getAge</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">21</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>&quot;number&quot;</em></li><li>B: <em>&quot;array&quot;</em></li><li>C: <em>&quot;object&quot;</em></li><li>D: <em>&quot;NaN&quot;</em></li></ul><h3 id="_262-下面代码的输出是什么-c" tabindex="-1">262. 下面代码的输出是什么？（ <em>C</em> ） <a class="header-anchor" href="#_262-下面代码的输出是什么-c" aria-label="Permalink to &quot;262. 下面代码的输出是什么？（ _C_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">getAge</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">use strict</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">age</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">21</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">age</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getAge</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>21</em></li><li>B: <em>undefined</em></li><li>C: <em>ReferenceError</em></li><li>D: <em>TypeError</em></li></ul><h3 id="_263-下面代码的输出是什么-a" tabindex="-1">263. 下面代码的输出是什么？（ <em>A</em> ） <a class="header-anchor" href="#_263-下面代码的输出是什么-a" aria-label="Permalink to &quot;263. 下面代码的输出是什么？（ _A_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> sum </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">eval</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">10*10+5</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>105</em></li><li>B: <em>&quot;105&quot;</em></li><li>C: <em>TypeError</em></li><li>D: <em>&quot;10*10+5&quot;</em></li></ul><h3 id="_264-cool-secret-可以访问多长时间-b" tabindex="-1">264. <em>cool_secret</em> 可以访问多长时间？（ <em>B</em> ） <a class="header-anchor" href="#_264-cool-secret-可以访问多长时间-b" aria-label="Permalink to &quot;264. _cool_secret_ 可以访问多长时间？（ _B_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sessionStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setItem</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cool_secret</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">123</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A：永远，数据不会丢失。</li><li>B：用户关闭选项卡时。</li><li>C：当用户关闭整个浏览器时，不仅是选项卡。</li><li>D：用户关闭计算机时。</li></ul><h3 id="_265-下面代码的输出是什么-b" tabindex="-1">265. 下面代码的输出是什么？（ <em>B</em> ） <a class="header-anchor" href="#_265-下面代码的输出是什么-b" aria-label="Permalink to &quot;265. 下面代码的输出是什么？（ _B_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(num)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>8</em></li><li>B: <em>10</em></li><li>C: <em>SyntaxError</em></li><li>D: <em>ReferenceError</em></li></ul><h3 id="_266-下面代码的输出是什么-c" tabindex="-1">266. 下面代码的输出是什么？（ <em>C</em> ） <a class="header-anchor" href="#_266-下面代码的输出是什么-c" aria-label="Permalink to &quot;266. 下面代码的输出是什么？（ _C_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> set </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hasOwnProperty</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hasOwnProperty</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">set</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">set</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>false</em> <em>true</em> <em>false</em> <em>true</em></li><li>B: <em>false</em> <em>true</em> <em>true</em> <em>true</em></li><li>C: <em>true</em> <em>true</em> <em>false</em> <em>true</em></li><li>D: <em>true</em> <em>true</em> <em>true</em> <em>true</em></li></ul><h3 id="_267-下面代码的输出是什么-c" tabindex="-1">267. 下面代码的输出是什么？（ <em>C</em> ） <a class="header-anchor" href="#_267-下面代码的输出是什么-c" aria-label="Permalink to &quot;267. 下面代码的输出是什么？（ _C_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">one</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">two</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">three</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(obj)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>{ a: &quot;one&quot;, b: &quot;two&quot; }</em></li><li>B: <em>{ b: &quot;two&quot;, a: &quot;three&quot; }</em></li><li>C: <em>{ a: &quot;three&quot;, b: &quot;two&quot; }</em></li><li>D: <em>SyntaxError</em></li></ul><h3 id="_268-下面代码的输出是什么-c" tabindex="-1">268. 下面代码的输出是什么？（ <em>C</em> ） <a class="header-anchor" href="#_268-下面代码的输出是什么-c" aria-label="Permalink to &quot;268. 下面代码的输出是什么？（ _C_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> (</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">continue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>A: <em>1 2</em></li><li>B: <em>1 2 3</em></li><li>C: <em>1 2 4</em></li><li>D: <em>1 3 4</em></li></ul><h3 id="_269-下面代码的输出是什么-a" tabindex="-1">269. 下面代码的输出是什么？（ <em>A</em> ） <a class="header-anchor" href="#_269-下面代码的输出是什么-a" aria-label="Permalink to &quot;269. 下面代码的输出是什么？（ _A_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">giveLydiaPizza</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Just give Lydia pizza already!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Lydia</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">giveLydiaPizza</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>&quot;Just give Lydia pizza already!&quot;</em></li><li>B: <em>TypeError: not a function</em></li><li>C: <em>SyntaxError</em></li><li>D: <em>undefined</em></li></ul><h3 id="_270-下面代码的输出是什么-b" tabindex="-1">270. 下面代码的输出是什么？（ <em>B</em> ） <a class="header-anchor" href="#_270-下面代码的输出是什么-b" aria-label="Permalink to &quot;270. 下面代码的输出是什么？（ _B_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{};</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> c </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">a[b] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">a[c] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">456</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(a[b])</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>123</em></li><li>B: <em>456</em></li><li>C: <em>undefined</em></li><li>D: <em>ReferenceError</em></li></ul><h3 id="_271-下面代码的输出是什么-b" tabindex="-1">271. 下面代码的输出是什么？（ <em>B</em> ） <a class="header-anchor" href="#_271-下面代码的输出是什么-b" aria-label="Permalink to &quot;271. 下面代码的输出是什么？（ _B_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> foo </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">First</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> bar </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Second</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> baz </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Third</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">bar</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">foo</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">baz</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>First</em> <em>Second</em> <em>Third</em></li><li>B: <em>First</em> <em>Third</em> <em>Second</em></li><li>C: <em>Second</em> <em>First</em> <em>Third</em></li><li>D: <em>Second</em> <em>Third</em> <em>First</em></li></ul><h3 id="_272-单击按钮时-event-target-是什么-c" tabindex="-1">272. 单击按钮时 <em>event.target</em> 是什么？（ <em>C</em> ） <a class="header-anchor" href="#_272-单击按钮时-event-target-是什么-c" aria-label="Permalink to &quot;272. 单击按钮时 _event.target_ 是什么？（ _C_ ）&quot;">​</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onclick</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#C3E88D;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">first div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onclick</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#C3E88D;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">second div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onclick</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#C3E88D;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">button</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">Click!</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li>A: <em>div</em> 外部</li><li>B: <em>div</em> 内部</li><li>C: <em>button</em></li><li>D: 所有嵌套元素的数组</li></ul><h3 id="_273-单击下面的-html-片段打印的内容是什么-a" tabindex="-1">273. 单击下面的 <em>html</em> 片段打印的内容是什么？（ <em>A</em> ） <a class="header-anchor" href="#_273-单击下面的-html-片段打印的内容是什么-a" aria-label="Permalink to &quot;273. 单击下面的 _html_ 片段打印的内容是什么？（ _A_ ）&quot;">​</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onclick</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#C3E88D;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onclick</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#C3E88D;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">p</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">Click here!</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li>A: <em>p</em> <em>div</em></li><li>B: <em>div</em> <em>p</em></li><li>C: <em>p</em></li><li>D: <em>div</em></li></ul><h3 id="_274-下面代码的输出是什么-d" tabindex="-1">274. 下面代码的输出是什么？（ <em>D</em> ） <a class="header-anchor" href="#_274-下面代码的输出是什么-d" aria-label="Permalink to &quot;274. 下面代码的输出是什么？（ _D_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> person </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Lydia</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">sayHi</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">age</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`\${</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> is </span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">age</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">sayHi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#BABED8;">(person</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">21</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">sayHi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#BABED8;">(person</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">21</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>undefined is 21</em> <em>Lydia is 21</em></li><li>B: <em>function</em> <em>function</em></li><li>C: <em>Lydia is 21</em> <em>Lydia is 21</em></li><li>D: <em>Lydia is 21</em> <em>function</em></li></ul><h3 id="_275-下面代码的输出是什么-b" tabindex="-1">275. 下面代码的输出是什么？（ <em>B</em> ） <a class="header-anchor" href="#_275-下面代码的输出是什么-b" aria-label="Permalink to &quot;275. 下面代码的输出是什么？（ _B_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">sayHi</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">sayHi</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>&quot;object&quot;</em></li><li>B: <em>&quot;number&quot;</em></li><li>C: <em>&quot;function&quot;</em></li><li>D: <em>&quot;undefined&quot;</em></li></ul><h3 id="_276-下面这些值哪些是假值-a" tabindex="-1">276. 下面这些值哪些是假值？（ <em>A</em> ） <a class="header-anchor" href="#_276-下面这些值哪些是假值-a" aria-label="Permalink to &quot;276. 下面这些值哪些是假值？（ _A_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Boolean</span><span style="color:#BABED8;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">undefined;</span></span></code></pre></div><ul><li>A: <em>0</em> <em>&quot;&quot;</em> <em>undefined</em></li><li>B: <em>0</em> <em>new Number(0)</em> <em>&quot;&quot;</em> <em>new Boolean(false)</em> <em>undefined</em></li><li>C: <em>0</em> <em>&quot;&quot;</em> <em>new Boolean(false)</em> <em>undefined</em></li><li>D: 所有都是假值。</li></ul><h3 id="_278-下面代码的输出是什么-b" tabindex="-1">278. 下面代码的输出是什么？（ <em>B</em> ） <a class="header-anchor" href="#_278-下面代码的输出是什么-b" aria-label="Permalink to &quot;278. 下面代码的输出是什么？（ _B_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>&quot;number&quot;</em></li><li>B: <em>&quot;string&quot;</em></li><li>C: <em>&quot;object&quot;</em></li><li>D: <em>&quot;undefined&quot;</em></li></ul><h3 id="_279-下面代码的输出是什么-c" tabindex="-1">279. 下面代码的输出是什么？（ <em>C</em> ） <a class="header-anchor" href="#_279-下面代码的输出是什么-c" aria-label="Permalink to &quot;279. 下面代码的输出是什么？（ _C_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> numbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">numbers[</span><span style="color:#F78C6C;">10</span><span style="color:#BABED8;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(numbers)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>[1, 2, 3, 7 x null, 11]</em></li><li>B: <em>[1, 2, 3, 11]</em></li><li>C: <em>[1, 2, 3, 7 x empty, 11]</em></li><li>D: <em>SyntaxError</em></li></ul><h3 id="_280-下面代码的输出是什么-a" tabindex="-1">280. 下面代码的输出是什么？（ <em>A</em> ） <a class="header-anchor" href="#_280-下面代码的输出是什么-a" aria-label="Permalink to &quot;280. 下面代码的输出是什么？（ _A_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">y</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">x</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    (</span><span style="color:#BABED8;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">x</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">x</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">y</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>1</em> <em>undefined</em> <em>2</em></li><li>B: <em>undefined</em> <em>undefined</em> <em>undefined</em></li><li>C: <em>1</em> <em>1</em> <em>2</em></li><li>D: <em>1</em> <em>undefined</em> <em>undefined</em></li></ul><h3 id="_281-javascript-中的所有内容都是-a" tabindex="-1">281. <em>JavaScript</em> 中的所有内容都是…（ <em>A</em> ） <a class="header-anchor" href="#_281-javascript-中的所有内容都是-a" aria-label="Permalink to &quot;281. _JavaScript_ 中的所有内容都是…（ _A_ ）&quot;">​</a></h3><ul><li>A：原始或对象</li><li>B：函数或对象</li><li>C：技巧问题！只有对象</li><li>D：数字或对象</li></ul><h3 id="_282-下面代码的输出是什么" tabindex="-1">282. 下面代码的输出是什么? <a class="header-anchor" href="#_282-下面代码的输出是什么" aria-label="Permalink to &quot;282. 下面代码的输出是什么?&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">[</span></span>
<span class="line"><span style="color:#BABED8;">  [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reduce</span><span style="color:#BABED8;">(</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">acc</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">cur</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">acc</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">cur</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>[0, 1, 2, 3, 1, 2]</em></li><li>B: <em>[6, 1, 2]</em></li><li>C: <em>[1, 2, 0, 1, 2, 3]</em></li><li>D: <em>[1, 2, 6]</em></li></ul><h3 id="_283-下面代码的输出是什么-b" tabindex="-1">283. 下面代码的输出是什么？（ <em>B</em> ） <a class="header-anchor" href="#_283-下面代码的输出是什么-b" aria-label="Permalink to &quot;283. 下面代码的输出是什么？（ _B_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">!!null;</span></span>
<span class="line"><span style="color:#89DDFF;">!!</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">!!</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>false</em> <em>true</em> <em>false</em></li><li>B: <em>false</em> <em>false</em> <em>true</em></li><li>C: <em>false</em> <em>true</em> <em>true</em></li><li>D: <em>true</em> <em>true</em> <em>false</em></li></ul><h3 id="_284-setinterval-方法的返回值什么-a" tabindex="-1">284. <em>setInterval</em> 方法的返回值什么？（ <em>A</em> ） <a class="header-anchor" href="#_284-setinterval-方法的返回值什么-a" aria-label="Permalink to &quot;284. _setInterval_ 方法的返回值什么？（ _A_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">setInterval</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hi</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A：一个唯一的 <em>id</em></li><li>B：指定的毫秒数</li><li>C：传递的函数</li><li>D：<em>undefined</em></li></ul><h3 id="_285-下面代码的返回值是什么-a" tabindex="-1">285. 下面代码的返回值是什么？（ <em>A</em> ） <a class="header-anchor" href="#_285-下面代码的返回值是什么-a" aria-label="Permalink to &quot;285. 下面代码的返回值是什么？（ _A_ ）&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">[</span><span style="color:#89DDFF;">...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Lydia</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>A: <em>[&quot;L&quot;, &quot;y&quot;, &quot;d&quot;, &quot;i&quot;, &quot;a&quot;]</em></li><li>B: <em>[&quot;Lydia&quot;]</em></li><li>C: <em>[[], &quot;Lydia&quot;]</em></li><li>D: <em>[[&quot;L&quot;, &quot;y&quot;, &quot;d&quot;, &quot;i&quot;, &quot;a&quot;]]</em></li></ul><h3 id="_286-document-write-和-innerhtml-有哪些区别" tabindex="-1">286. <em>document.write</em> 和 <em>innerHTML</em> 有哪些区别？ <a class="header-anchor" href="#_286-document-write-和-innerhtml-有哪些区别" aria-label="Permalink to &quot;286. _document.write_ 和 _innerHTML_ 有哪些区别？&quot;">​</a></h3><h3 id="_287-假设有两个变量-a-和-b-他们的值都是数字-如何在不借用第三个变量的情况下-将两个变量的值对调" tabindex="-1">287. 假设有两个变量 <em>a</em> 和 <em>b</em>，他们的值都是数字，如何在不借用第三个变量的情况下，将两个变量的值对调？ <a class="header-anchor" href="#_287-假设有两个变量-a-和-b-他们的值都是数字-如何在不借用第三个变量的情况下-将两个变量的值对调" aria-label="Permalink to &quot;287. 假设有两个变量 _a_ 和 _b_，他们的值都是数字，如何在不借用第三个变量的情况下，将两个变量的值对调？&quot;">​</a></h3><h3 id="_288-前端为什么提倡模块化开发" tabindex="-1">288. 前端为什么提倡模块化开发？ <a class="header-anchor" href="#_288-前端为什么提倡模块化开发" aria-label="Permalink to &quot;288. 前端为什么提倡模块化开发？&quot;">​</a></h3><h3 id="_289-请解释-jsonp-的原理-并用代码描述其过程。" tabindex="-1">289. 请解释 <em>JSONP</em> 的原理，并用代码描述其过程。 <a class="header-anchor" href="#_289-请解释-jsonp-的原理-并用代码描述其过程。" aria-label="Permalink to &quot;289. 请解释 _JSONP_ 的原理，并用代码描述其过程。&quot;">​</a></h3><h3 id="_290-列举几种-javascript-中数据类型的强制转换和隐式转换。" tabindex="-1">290. 列举几种 <em>JavaScript</em> 中数据类型的强制转换和隐式转换。 <a class="header-anchor" href="#_290-列举几种-javascript-中数据类型的强制转换和隐式转换。" aria-label="Permalink to &quot;290. 列举几种 _JavaScript_ 中数据类型的强制转换和隐式转换。&quot;">​</a></h3><h3 id="_291-分析以下代码的执行结果并解释为什么。" tabindex="-1">291. 分析以下代码的执行结果并解释为什么。 <a class="header-anchor" href="#_291-分析以下代码的执行结果并解释为什么。" aria-label="Permalink to &quot;291. 分析以下代码的执行结果并解释为什么。&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">n</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">a</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">x </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">n</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(a</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">x)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(b</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">x)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_292-分析以下代码的执行结果并解释为什么。" tabindex="-1">292. 分析以下代码的执行结果并解释为什么。 <a class="header-anchor" href="#_292-分析以下代码的执行结果并解释为什么。" aria-label="Permalink to &quot;292. 分析以下代码的执行结果并解释为什么。&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// example 1</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#BABED8;">  b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  c </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">a[b] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">a[c] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(a[b])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// example 2</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#BABED8;">  b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  c </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">a[b] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">a[c] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(a[b])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// example 3</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#BABED8;">  b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  c </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">456</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;">a[b] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">a[c] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(a[b])</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_293-下面的代码打印什么内容-为什么" tabindex="-1">293. 下面的代码打印什么内容？为什么？ <a class="header-anchor" href="#_293-下面的代码打印什么内容-为什么" aria-label="Permalink to &quot;293. 下面的代码打印什么内容？为什么？&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">b</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">b</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">b</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_294-下面代码中-a-在什么情况下会执行输出语句打印-1" tabindex="-1">294. 下面代码中，<em>a</em> 在什么情况下会执行输出语句打印 <em>1</em> ？ <a class="header-anchor" href="#_294-下面代码中-a-在什么情况下会执行输出语句打印-1" aria-label="Permalink to &quot;294. 下面代码中，_a_ 在什么情况下会执行输出语句打印 _1_ ？&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">?</span><span style="color:#BABED8;">;</span></span>
<span class="line"><span style="color:#82AAFF;">if</span><span style="color:#BABED8;">(a </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;"> 	console.log(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_295-介绍前端模块化的发展。" tabindex="-1">295. 介绍前端模块化的发展。 <a class="header-anchor" href="#_295-介绍前端模块化的发展。" aria-label="Permalink to &quot;295. 介绍前端模块化的发展。&quot;">​</a></h3><h3 id="_296-请指出-document-onload-和-document-ready-两个事件的区别" tabindex="-1">296. 请指出 <em>document.onload</em> 和 document.ready 两个事件的区别 <a class="header-anchor" href="#_296-请指出-document-onload-和-document-ready-两个事件的区别" aria-label="Permalink to &quot;296. 请指出 _document.onload_ 和 document.ready 两个事件的区别&quot;">​</a></h3><h3 id="_297-表单元素的readonly-和-disabled-两个属性有什么区别" tabindex="-1">297. 表单元素的<em>readonly</em> 和 <em>disabled</em> 两个属性有什么区别？ <a class="header-anchor" href="#_297-表单元素的readonly-和-disabled-两个属性有什么区别" aria-label="Permalink to &quot;297. 表单元素的*readonly* 和 _disabled_ 两个属性有什么区别？&quot;">​</a></h3><h3 id="_298-列举几种你知道的数组排序的方法。" tabindex="-1">298. 列举几种你知道的数组排序的方法。 <a class="header-anchor" href="#_298-列举几种你知道的数组排序的方法。" aria-label="Permalink to &quot;298. 列举几种你知道的数组排序的方法。&quot;">​</a></h3><h3 id="_299-区分什么是-客户区坐标-、-页面坐标-、-屏幕坐标" tabindex="-1">299. 区分什么是“客户区坐标”、“页面坐标”、“屏幕坐标”？ <a class="header-anchor" href="#_299-区分什么是-客户区坐标-、-页面坐标-、-屏幕坐标" aria-label="Permalink to &quot;299. 区分什么是“客户区坐标”、“页面坐标”、“屏幕坐标”？&quot;">​</a></h3><h3 id="_300-如何编写高性能的-javascript" tabindex="-1">300. 如何编写高性能的 <em>JavaScript</em>？ <a class="header-anchor" href="#_300-如何编写高性能的-javascript" aria-label="Permalink to &quot;300. 如何编写高性能的 _JavaScript_？&quot;">​</a></h3><h3 id="_301-下面的代码输出什么" tabindex="-1">301. 下面的代码输出什么？ <a class="header-anchor" href="#_301-下面的代码输出什么" aria-label="Permalink to &quot;301. 下面的代码输出什么？&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;">a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(a </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">7</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,403),p=[e];function t(r,c,y,F,D,i){return a(),n("div",null,p)}const m=s(o,[["render",t]]);export{h as __pageData,m as default};
