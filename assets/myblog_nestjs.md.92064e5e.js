import{_ as s,o as a,c as n,V as e}from"./chunks/framework.bd00fe0c.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"myblog/nestjs.md","filePath":"myblog/nestjs.md","lastUpdated":1684926140000}'),l={name:"myblog/nestjs.md"},t=e(`<h2 id="nestjs" tabindex="-1">Nestjs <a class="header-anchor" href="#nestjs" aria-label="Permalink to &quot;Nestjs&quot;">​</a></h2><p><a href="https://docs.nestjs.com/" target="_blank" rel="noreferrer">官网</a></p><p>博客后端选用的是Nest框架，Nest 是一个用于构建高效，可扩展的 Node.js 服务器端应用程序的框架。它使用渐进式 JavaScript，内置并完全支持 TypeScript并结合了 OOP（面向对象编程），FP（函数式编程）和 FRP（函数式响应编程）的元素。风格类似java spring，在服务器端提供开箱即用的应用架构，让前端人员也能够快速创建可扩展、松耦合、易维护的应用。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">i</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@nestjs/cli</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">new</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">nest-blog-api</span></span></code></pre></div><h2 id="数据库模型" tabindex="-1">数据库模型 <a class="header-anchor" href="#数据库模型" aria-label="Permalink to &quot;数据库模型&quot;">​</a></h2><p>数据库存储：MySQL</p><p>ORM框架：TypeORM</p><p><a href="https://docs.nestjs.com/recipes/sql-typeorm" target="_blank" rel="noreferrer">Nest接入TypeORM</a></p><p><a href="https://typeorm.io/" target="_blank" rel="noreferrer">TypeORM文档</a></p><h3 id="搭建mysql" tabindex="-1">搭建MySQL <a class="header-anchor" href="#搭建mysql" aria-label="Permalink to &quot;搭建MySQL&quot;">​</a></h3><p>首先搭建MySQL服务，创建数据库并获取数据库连接以及用户名密码​</p><h2 id="项目配置文件" tabindex="-1">项目配置文件 <a class="header-anchor" href="#项目配置文件" aria-label="Permalink to &quot;项目配置文件&quot;">​</a></h2><div class="language-mermaid"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">graph</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">LR</span></span>
<span class="line"><span style="color:#BABED8;">KaTex</span><span style="color:#89DDFF;font-style:italic;">--&gt;</span><span style="color:#BABED8;"> A</span><span style="color:#89DDFF;font-style:italic;">(</span><span style="color:#C3E88D;">标记 Accents</span><span style="color:#89DDFF;font-style:italic;">)</span></span>
<span class="line"><span style="color:#BABED8;">A</span><span style="color:#89DDFF;font-style:italic;">--&gt;</span><span style="color:#BABED8;">撇,估计,均值,向量等写于符号上下的标记</span></span>
<span class="line"><span style="color:#BABED8;">KaTex</span><span style="color:#89DDFF;font-style:italic;">--&gt;</span><span style="color:#BABED8;"> 分隔符_Delimiters</span></span>
<span class="line"><span style="color:#BABED8;">分隔符_Delimiters</span><span style="color:#89DDFF;font-style:italic;">--&gt;</span><span style="color:#BABED8;">小中大括号,竖杠,绝对值等分隔符的反斜杠写法</span></span>
<span class="line"><span style="color:#BABED8;">KaTex</span><span style="color:#89DDFF;font-style:italic;">--&gt;</span><span style="color:#BABED8;"> 公式组_Enviroments</span></span>
<span class="line"><span style="color:#BABED8;">公式组_Enviroments</span><span style="color:#89DDFF;font-style:italic;">--&gt;</span><span style="color:#BABED8;">B</span><span style="color:#89DDFF;font-style:italic;">(</span><span style="color:#C3E88D;">.....</span><span style="color:#89DDFF;font-style:italic;">)</span></span>
<span class="line"><span style="color:#BABED8;">KaTex</span><span style="color:#89DDFF;font-style:italic;">--&gt;</span><span style="color:#BABED8;">C</span><span style="color:#89DDFF;font-style:italic;">(</span><span style="color:#C3E88D;">...</span><span style="color:#89DDFF;font-style:italic;">)</span></span></code></pre></div>`,13),o=[t];function p(r,c,i,y,D,B){return a(),n("div",null,o)}const F=s(l,[["render",p]]);export{h as __pageData,F as default};
