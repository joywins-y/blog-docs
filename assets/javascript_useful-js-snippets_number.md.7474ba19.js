import{_ as s,o as a,c as n,V as l}from"./chunks/framework.bd00fe0c.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/useful-js-snippets/number.md","filePath":"javascript/useful-js-snippets/number.md","lastUpdated":1689048652000}'),o={name:"javascript/useful-js-snippets/number.md"},p=l('<h2 id="number-数字" tabindex="-1">Number 数字 <a class="header-anchor" href="#number-数字" aria-label="Permalink to &quot;Number 数字&quot;">​</a></h2><h3 id="truncated-numbers-截断数字" tabindex="-1">Truncated numbers (截断数字) <a class="header-anchor" href="#truncated-numbers-截断数字" aria-label="Permalink to &quot;Truncated numbers (截断数字)&quot;">​</a></h3><p>当你需要将小数点后的某些数字截断而不取四舍五入</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> toFixed </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">fixed</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">`${</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">}`</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">RegExp</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">^-?</span><span style="color:#BABED8;">\\d</span><span style="color:#C3E88D;">+(?:.</span><span style="color:#BABED8;">\\d</span><span style="color:#C3E88D;">{0,</span><span style="color:#89DDFF;">${</span><span style="color:#BABED8;">fixed</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">})?</span><span style="color:#89DDFF;">`</span><span style="color:#BABED8;">))[</span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// toFixed(10.255, 2); // 10.25</span></span></code></pre></div><h3 id="rounding-四舍五入" tabindex="-1">Rounding (四舍五入) <a class="header-anchor" href="#rounding-四舍五入" aria-label="Permalink to &quot;Rounding (四舍五入)&quot;">​</a></h3><p>当你需要将小数点后的某些数字截断，并取四舍五入</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> round </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">decimals</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">Number</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">`${</span><span style="color:#BABED8;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">`${</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">e</span><span style="color:#89DDFF;">${</span><span style="color:#BABED8;">decimals</span><span style="color:#89DDFF;">}`</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">e-</span><span style="color:#89DDFF;">${</span><span style="color:#BABED8;">decimals</span><span style="color:#89DDFF;">}`</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// round(10.255, 2); // 10.26</span></span></code></pre></div><h3 id="zero-padding-补零" tabindex="-1">Zero padding (补零) <a class="header-anchor" href="#zero-padding-补零" aria-label="Permalink to &quot;Zero padding (补零)&quot;">​</a></h3><p>当你需要在一个数字 num 不足 len 位数的时候前面补零操作</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> replenishZero </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">num</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">zero</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span></span>\n<span class="line"><span style="color:#BABED8;">  num</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">padStart</span><span style="color:#BABED8;">(len</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> zero)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// replenishZero(8, 2); // 08</span></span></code></pre></div>',10),e=[p];function t(r,c,D,y,i,B){return a(),n("div",null,e)}const A=s(o,[["render",t]]);export{d as __pageData,A as default};
