import{_ as a,o as s,c as e,V as l}from"./chunks/framework.bd00fe0c.js";const D=JSON.parse('{"title":"3 月 28 号面试题","description":"","frontmatter":{},"headers":[],"relativePath":"面试复盘/2024年3月28号.md","filePath":"面试复盘/2024年3月28号.md","lastUpdated":1711871512000}'),t={name:"面试复盘/2024年3月28号.md"},o=l(`<h1 id="_3-月-28-号面试题" tabindex="-1">3 月 28 号面试题 <a class="header-anchor" href="#_3-月-28-号面试题" aria-label="Permalink to &quot;3 月 28 号面试题&quot;">​</a></h1><h2 id="_1-css-里面的选择器有哪些-权重是什么样的" tabindex="-1">1. CSS 里面的选择器有哪些？权重是什么样的？ <a class="header-anchor" href="#_1-css-里面的选择器有哪些-权重是什么样的" aria-label="Permalink to &quot;1. CSS 里面的选择器有哪些？权重是什么样的？&quot;">​</a></h2><h2 id="_2-js-的-对象继承" tabindex="-1">2. JS 的 对象继承 <a class="header-anchor" href="#_2-js-的-对象继承" aria-label="Permalink to &quot;2. JS 的 对象继承&quot;">​</a></h2><ol><li>构造函数继承</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Parent</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">parent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_3-谈谈-js-的作用域" tabindex="-1">3. 谈谈 JS 的作用域 <a class="header-anchor" href="#_3-谈谈-js-的作用域" aria-label="Permalink to &quot;3. 谈谈 JS 的作用域&quot;">​</a></h2><ol><li>全局作用域：全局变量和全局函数都可以在任意地方访问。</li><li>函数作用域：函数内部定义的变量和函数只能在函数内部访问。</li><li>块级作用域：ES6 引入了块级作用域，块级作用域中定义的变量和函数只能在块级作用域中访问。</li></ol><h2 id="_4-说一下-js-的垃圾回收机制" tabindex="-1">4. 说一下 JS 的垃圾回收机制 <a class="header-anchor" href="#_4-说一下-js-的垃圾回收机制" aria-label="Permalink to &quot;4. 说一下 JS 的垃圾回收机制&quot;">​</a></h2><h2 id="_5-谈谈对-react-的理解" tabindex="-1">5. 谈谈对 React 的理解 <a class="header-anchor" href="#_5-谈谈对-react-的理解" aria-label="Permalink to &quot;5. 谈谈对 React 的理解&quot;">​</a></h2><ul><li>React 是一个用于构建用户界面的 JavaScript 库。</li><li>React 使用虚拟 DOM 来提高性能，并使用 JSX 语法来编写代码。</li><li>React 组件可以嵌套，并且可以复用。React 使用 state 和 props 来管理组件的状态。</li><li>React 使用生命周期方法来管理组件的生命周期。</li><li>React 使用 hooks 来管理组件的状态和生命周期。</li><li>React 使用 context 来管理组件的状态。</li><li>React 使用 redux 来管理组件的状态。</li><li>React 使用 react-router 来管理组件的路由。</li><li>React 使用 react-redux 来管理组件的状态。</li></ul>`,10),n=[o];function r(c,i,p,_,h,d){return s(),e("div",null,n)}const F=a(t,[["render",r]]);export{D as __pageData,F as default};
