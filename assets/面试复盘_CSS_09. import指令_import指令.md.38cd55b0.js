import{_ as e,o as s,c as m,V as l}from"./chunks/framework.bd00fe0c.js";const F=JSON.parse('{"title":"import 指令","description":"","frontmatter":{},"headers":[],"relativePath":"面试复盘/CSS/09. import指令/import指令.md","filePath":"面试复盘/CSS/09. import指令/import指令.md","lastUpdated":1712573589000}'),p={name:"面试复盘/CSS/09. import指令/import指令.md"},t=l(`<h1 id="import-指令" tabindex="-1"><em>import</em> 指令 <a class="header-anchor" href="#import-指令" aria-label="Permalink to &quot;*import* 指令&quot;">​</a></h1><h2 id="经典真题" tabindex="-1">经典真题 <a class="header-anchor" href="#经典真题" aria-label="Permalink to &quot;经典真题&quot;">​</a></h2><ul><li><em>CSS</em> 引用的方式有哪些？<em>link</em> 和 <em>@import</em> 的区别？</li></ul><h2 id="来看看-import-指令是啥" tabindex="-1">来看看 <em>import</em> 指令是啥 <a class="header-anchor" href="#来看看-import-指令是啥" aria-label="Permalink to &quot;来看看 *import* 指令是啥&quot;">​</a></h2><p><em>import</em> 指令是用来导入 <em>CSS</em> 样式的。</p><p>什么？导入样式不是已经有 <em>link</em> 标签了么？</p><p>没错，<em>link</em> 标签可以导入外部 <em>CSS</em> 样式，<em>import</em> 仍然可以导入外部 <em>CSS</em> 样式。</p><p>我们首先来看一下 <em>import</em> 的基本用法</p><ol><li>在 <em>HTML</em> 文件中导入外部样式</li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">@import</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./index.css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>要在 <em>HTML</em> 源代码直接应用 <em>@import</em> 引入外部 <em>CSS</em> 文件，须要将 <em>@import</em> 放入 <em>style</em> 标签</p><ol start="2"><li>在 <em>CSS</em> 文件中引入另一个 <em>CSS</em> 文件</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@import</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./index.css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 后面书写其他样式 */</span></span></code></pre></div><p>除了 <em>HTML</em> 源代码中使用 <em>style</em> 标签来运用 <em>@import</em>，在 <em>CSS</em> 文件代码中依旧可以或许使用 <em>@import</em>，这个时候就不须要 <em>style</em> 标签，而是直接应用 <em>@import</em> 就可，这样便可实现一个（多个）<em>CSS</em> 文件中引入套入别的一个（多个）<em>CSS</em> 文件。</p><ol start="3"><li><em>@import</em> 规则还支持媒体查询，因此可以允许依赖媒体的导入</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">printstyle.css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> print</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 只在媒体为 print 时导入 &quot;printstyle.css&quot; 样式表 */</span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mobstyle.css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">max-width</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">768px</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 只在媒体为 screen 且视口最大宽度 768 像素时导入 &quot;mobstyle.css&quot; 样式表 */</span></span></code></pre></div><p>看完了 <em>@import</em> 的基本使用后，接下来我们来看一下它和 <em>link</em> 的区别：</p><ol><li><p><strong><em>link</em> 属于 <em>HTML</em> 标签，而 <em>@import</em> 完全是 <em>CSS</em> 提供的一种方式。</strong></p><p><em>link</em> 标签除了可以加载 <em>CSS</em> 外，还可以做很多其它的事情，比如定义 <em>RSS</em>，定义 <em>rel</em> 连接属性等，<em>@import</em> 就只能加载 <em>CSS</em> 了。</p></li><li><p><strong>加载顺序的差别。</strong></p><p>比如，在 <em>a.css</em> 中使用 <em>import</em> 引用 <em>b.css</em>，只有当使用当使用 <em>import</em> 命令的宿主 <em>css</em> 文件 <em>a.css</em> 被下载、解析之后，浏览器才会知道还有另外一个 <em>b.css</em> 需要下载，这时才去下载，然后下载后开始解析、构建 <em>render tree</em> 等一系列操作.</p></li><li><p><strong>兼容性的差别。</strong></p><p>由于 <em>@import</em> 是 <em>CSS2.1</em> 提出的所以老的浏览器不支持，<em>@import</em> 只有在 <em>IE5</em> 以上的才能识别，而 <em>link</em> 标签无此问题。</p></li><li><p><strong>当使用 <em>JS</em> 控制 <em>DOM</em> 去改变样式的时候，只能使用 <em>link</em> 标签，因为 <em>@import</em> 不是 <em>DOM</em> 可以控制的</strong>。</p><p>对于可换皮肤的网站而言，可以通过改变 <em>link</em> 标签这两个的 <em>href</em> 值来改变应用不用的外部样式表，但是对于 <em>import</em> 是无法操作的，毕竟不是标签。</p></li></ol><p>另外，从性能优化的角度来讲，尽量要避免使用 <em>@import</em>。</p><p>使用 <em>@import</em> 引入 <em>CSS</em> 会影响浏览器的并行下载。使用 <em>@import</em> 引用的 <em>CSS</em> 文件只有在引用它的那个 <em>CSS</em> 文件被下载、解析之后，浏览器才会知道还有另外一个 <em>CSS</em> 需要下载，这时才去下载，然后下载后开始解析、构建 <em>Render Tree</em> 等一系列操作。</p><p>多个 <em>@import</em> 会导致下载顺序紊乱。在 <em>IE</em> 中，<em>@import</em> 会引发资源文件的下载顺序被打乱，即排列在 <em>@import</em> 后面的 <em>JS</em> 文件先于 <em>@import</em> 下载，并且打乱甚至破坏 <em>@import</em> 自身的并行下载。</p><h2 id="真题解答" tabindex="-1">真题解答 <a class="header-anchor" href="#真题解答" aria-label="Permalink to &quot;真题解答&quot;">​</a></h2><ul><li><em>CSS</em> 引用的方式有哪些？<em>link</em> 和 <em>@import</em> 的区别？</li></ul><blockquote><p>参考答案：</p><p><em>CSS</em> 引用的方式有：</p><ul><li>外联，通过 <em>link</em> 标签外部链接样式表</li><li>内联，在 <em>head</em> 标记中使用 <em>style</em> 标记定义样式</li><li>嵌入，在元素的开始标记里通过 <em>style</em> 属性定义样式</li></ul><p><em>link</em> 和 <em>@import</em> 的区别：</p><ol><li><p><strong><em>link</em> 属于 <em>HTML</em> 标签，而 <em>@import</em> 完全是 <em>CSS</em> 提供的一种方式。</strong></p><p><em>link</em> 标签除了可以加载 <em>CSS</em> 外，还可以做很多其它的事情，比如定义 <em>RSS</em>，定义 <em>rel</em> 连接属性等，<em>@import</em> 就只能加载 <em>CSS</em> 了。</p></li><li><p><strong>加载顺序的差别。</strong></p><p>比如，在 <em>a.css</em> 中使用 <em>import</em> 引用 <em>b.css</em>，只有当使用当使用 <em>import</em> 命令的宿主 <em>css</em> 文件 <em>a.css</em> 被下载、解析之后，浏览器才会知道还有另外一个 <em>b.css</em> 需要下载，这时才去下载，然后下载后开始解析、构建 <em>render tree</em> 等一系列操作.</p></li><li><p><strong>兼容性的差别。</strong></p><p>由于 <em>@import</em> 是 <em>CSS2.1</em> 提出的所以老的浏览器不支持，<em>@import</em> 只有在 <em>IE5</em> 以上的才能识别，而 <em>link</em> 标签无此问题。</p></li><li><p><strong>当使用 <em>JS</em> 控制 <em>DOM</em> 去改变样式的时候，只能使用 <em>link</em> 标签，因为 <em>@import</em> 不是 <em>DOM</em> 可以控制的</strong>。</p><p>对于可换皮肤的网站而言，可以通过改变 <em>link</em> 便签这两个的 <em>href</em> 值来改变应用不用的外部样式表，但是对于 <em>import</em> 是无法操作的，毕竟不是标签。</p></li></ol></blockquote><p>-<em>EOF</em>-</p>`,26),o=[t];function a(n,i,r,c,y,D){return s(),m("div",null,o)}const d=e(p,[["render",a]]);export{F as __pageData,d as default};
