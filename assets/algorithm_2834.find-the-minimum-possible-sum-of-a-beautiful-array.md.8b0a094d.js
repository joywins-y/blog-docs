import{_ as p,H as e,o as c,c as r,C as s,J as o,E as a,a as l,V as t}from"./chunks/framework.bd00fe0c.js";const y="/blog-docs/assets/2834.2863f0c8.png",T=JSON.parse('{"title":"2834. 找出美丽数组的最小和","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/2834.find-the-minimum-possible-sum-of-a-beautiful-array.md","filePath":"algorithm/2834.find-the-minimum-possible-sum-of-a-beautiful-array.md","lastUpdated":1709959207000}'),i={name:"algorithm/2834.find-the-minimum-possible-sum-of-a-beautiful-array.md"},F=t('<h1 id="_2834-找出美丽数组的最小和" tabindex="-1">2834. 找出美丽数组的最小和 <a class="header-anchor" href="#_2834-找出美丽数组的最小和" aria-label="Permalink to &quot;2834. 找出美丽数组的最小和&quot;">​</a></h1><blockquote><p>难度：<span style="color:#ffb800;font-weight:500;">中等</span></p><p>地址：<a href="https://leetcode.cn/problems/find-the-minimum-possible-sum-of-a-beautiful-array/" target="_blank" rel="noreferrer">https://leetcode.cn/problems/find-the-minimum-possible-sum-of-a-beautiful-array/</a></p></blockquote><p>给你两个正整数：<code>n</code> 和 <code>target</code> 。</p><p>如果数组 <code>nums</code> 满足下述条件，则称其为 <strong>美丽数组</strong> 。</p><ul><li><code>nums.length == n</code>.</li><li><code>nums</code> 由两两互不相同的正整数组成。</li><li>在范围 <code>[0, n-1]</code> 内，<strong>不存在</strong> 两个 <strong>不同</strong> 下标 <code>i</code> 和 <code>j</code> ，使得 <code>nums[i] + nums[j] == target</code> 。</li><li>返回符合条件的美丽数组所可能具备的 <code>最小</code> 和，并对结果进行取模 <code>10^9 + 7</code>。</li></ul><p><strong>示例 1：</strong></p>',6),D=s("ul",null,[s("li",null,"nums 的长度为 n = 2 。"),s("li",null,"nums 由两两互不相同的正整数组成。"),s("li",null,"不存在两个不同下标 i 和 j ，使得 nums[i] + nums[j] == 3 。 可以证明 4 是符合条件的美丽数组所可能具备的最小和。")],-1),u=s("p",null,[s("strong",null,"示例 2：")],-1),f=s("ul",null,[s("li",null,"nums 的长度为 n = 3 。"),s("li",null,"nums 由两两互不相同的正整数组成。"),s("li",null,"不存在两个不同下标 i 和 j ，使得 nums[i] + nums[j] == 3 。 可以证明 8 是符合条件的美丽数组所可能具备的最小和。")],-1),m=s("p",null,[s("strong",null,"示例 3：")],-1),d=t('<p><strong>提示：</strong></p><ul><li><code>1 &lt;= n &lt;= 10^9</code></li><li><code>1 &lt;= target &lt;= 10^9</code></li></ul><p><strong>题解：</strong></p><p><strong>方法一：贪心</strong></p><p><img src="'+y+`" alt="alt text"></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">number</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">n</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">number</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">target</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">return</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">number</span><span style="color:#89DDFF;font-style:italic;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> minimumPossibleSum </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">target</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">mod</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1000000007</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">m</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">target</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">m</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (((</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">n</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">n</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">mod</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">        (((</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">m</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">m</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> ((</span><span style="color:#BABED8;">target</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">target</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">m</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">m</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">%</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;font-style:italic;">mod</span></span>
<span class="line"><span style="color:#F07178;">    )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div>`,6);function _(B,g,E,A,C,h){const n=e("font");return c(),r("div",null,[F,s("blockquote",null,[s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输入")]),_:1})]),l("：n = 2, target = 3")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输出")]),_:1})]),l("：4")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("解释")]),_:1})]),l("：nums = [1,3] 是美丽数组。")])]),D,u,s("blockquote",null,[s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输入")]),_:1})]),l("：n = 3, target = 3")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输出")]),_:1})]),l("：8")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("解释")]),_:1})]),l("：nums = [1,3,4] 是美丽数组。")])]),f,m,s("blockquote",null,[s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输入")]),_:1})]),l("：n = 1, target = 1")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输出")]),_:1})]),l("：1")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("解释")]),_:1})]),l("：nums = [1] 是美丽数组。")])]),d])}const k=p(i,[["render",_]]);export{T as __pageData,k as default};
