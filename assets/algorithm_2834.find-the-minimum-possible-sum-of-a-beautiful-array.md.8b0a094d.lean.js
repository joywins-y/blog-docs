import{_ as p,H as e,o as c,c as r,C as s,J as o,E as a,a as l,V as t}from"./chunks/framework.bd00fe0c.js";const y="/blog-docs/assets/2834.2863f0c8.png",T=JSON.parse('{"title":"2834. 找出美丽数组的最小和","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/2834.find-the-minimum-possible-sum-of-a-beautiful-array.md","filePath":"algorithm/2834.find-the-minimum-possible-sum-of-a-beautiful-array.md","lastUpdated":1709959207000}'),i={name:"algorithm/2834.find-the-minimum-possible-sum-of-a-beautiful-array.md"},F=t("",6),D=s("ul",null,[s("li",null,"nums 的长度为 n = 2 。"),s("li",null,"nums 由两两互不相同的正整数组成。"),s("li",null,"不存在两个不同下标 i 和 j ，使得 nums[i] + nums[j] == 3 。 可以证明 4 是符合条件的美丽数组所可能具备的最小和。")],-1),u=s("p",null,[s("strong",null,"示例 2：")],-1),f=s("ul",null,[s("li",null,"nums 的长度为 n = 3 。"),s("li",null,"nums 由两两互不相同的正整数组成。"),s("li",null,"不存在两个不同下标 i 和 j ，使得 nums[i] + nums[j] == 3 。 可以证明 8 是符合条件的美丽数组所可能具备的最小和。")],-1),m=s("p",null,[s("strong",null,"示例 3：")],-1),d=t("",6);function _(B,g,E,A,C,h){const n=e("font");return c(),r("div",null,[F,s("blockquote",null,[s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输入")]),_:1})]),l("：n = 2, target = 3")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输出")]),_:1})]),l("：4")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("解释")]),_:1})]),l("：nums = [1,3] 是美丽数组。")])]),D,u,s("blockquote",null,[s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输入")]),_:1})]),l("：n = 3, target = 3")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输出")]),_:1})]),l("：8")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("解释")]),_:1})]),l("：nums = [1,3,4] 是美丽数组。")])]),f,m,s("blockquote",null,[s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输入")]),_:1})]),l("：n = 1, target = 1")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("输出")]),_:1})]),l("：1")]),s("p",null,[s("strong",null,[o(n,{color:"#000"},{default:a(()=>[l("解释")]),_:1})]),l("：nums = [1] 是美丽数组。")])]),d])}const k=p(i,[["render",_]]);export{T as __pageData,k as default};
