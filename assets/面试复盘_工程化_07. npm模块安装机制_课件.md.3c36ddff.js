import{_ as s,o as n,c as a,V as l}from"./chunks/framework.bd00fe0c.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"面试复盘/工程化/07. npm模块安装机制/课件.md","filePath":"面试复盘/工程化/07. npm模块安装机制/课件.md","lastUpdated":1712573589000}'),p={name:"面试复盘/工程化/07. npm模块安装机制/课件.md"},o=l(`<p>解释一下 npm 模块安装机制是什么？</p><blockquote><p>参考答案：</p><ol><li>npm 会检查本地的 node_modules 目录中是否已经安装过该模块，如果已经安装，则不再重新安装</li><li>npm 检查缓存中是否有相同的模块，如果有，直接从缓存中读取安装</li><li>如果本地和缓存中均不存在，npm 会从 registry 指定的地址下载安装包，然后将其写入到本地的 node_modules 目录中，同时缓存起来。</li></ol></blockquote><blockquote><p>npm 缓存相关命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 清除缓存</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cache</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">clean</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-f</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 获取缓存位置</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">config</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">get</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cache</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 设置缓存位置</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">config</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">set</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cache</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">新的缓存路径</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div></blockquote>`,3),e=[o];function t(c,r,i,y,_,B){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{E as __pageData,d as default};
